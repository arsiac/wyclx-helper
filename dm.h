/****************************************************************************
**
** Namespace Dm generated by dumpcpp v5.14.2 using
** dumpcpp lib\dm.dll
** from the type library lib\dm.dll
**
****************************************************************************/

#ifndef QAX_DUMPCPP_DM_H
#define QAX_DUMPCPP_DM_H

// Define this symbol to __declspec(dllexport) or __declspec(dllimport)
#ifndef DM_EXPORT
#define DM_EXPORT
#endif

#include <qaxobject.h>
#include <qaxwidget.h>
#include <qdatetime.h>
#include <qpixmap.h>

struct IDispatch;


// Referenced namespace

namespace Dm {


class DM_EXPORT Idmsoft : public QAxObject
{
public:
    explicit Idmsoft(IDispatch *subobject = nullptr, QAxObject *parent = nullptr);
    /*
    Method ActiveInputMethod

    method ActiveInputMethod

    */
    inline int ActiveInputMethod(int hwnd, const QString& id);

    /*
    Method AddDict

    method AddDict

    */
    inline int AddDict(int index, const QString& dict_info);

    /*
    Method AppendPicAddr

    method AppendPicAddr

    */
    inline QString AppendPicAddr(const QString& pic_info, int addr, int size);

    /*
    Method AsmAdd

    method AsmAdd

    */
    inline int AsmAdd(const QString& asm_ins);

    /*
    Method AsmCall

    method AsmCall

    */
    inline int AsmCall(int hwnd, int mode);

    /*
    Method AsmClear

    method AsmClear

    */
    inline int AsmClear();

    /*
    Method AsmCode

    method AsmCode

    */
    inline QString AsmCode(int base_addr);

    /*
    Method Assemble

    method Assemble

    */
    inline QString Assemble(const QString& asm_code, int base_addr, int is_upper);

    /*
    Method BGR2RGB

    method BGR2RGB

    */
    inline QString BGR2RGB(const QString& bgr_color);

    /*
    Method Beep

    method Beep

    */
    inline int Beep(int fre, int delay);

    /*
    Method BindWindow

    method BindWindow

    */
    inline int BindWindow(int hwnd, const QString& display, const QString& mouse, const QString& keypad, int mode);

    /*
    Method BindWindowEx

    method BindWindowEx

    */
    inline int BindWindowEx(int hwnd, const QString& display, const QString& mouse, const QString& keypad, const QString& public_desc, int mode);

    /*
    Method Capture

    method Capture

    */
    inline int Capture(int x1, int y1, int x2, int y2, const QString& file);

    /*
    Method CaptureGif

    method CaptureGif

    */
    inline int CaptureGif(int x1, int y1, int x2, int y2, const QString& file, int delay, int time);

    /*
    Method CaptureJpg

    method CaptureJpg

    */
    inline int CaptureJpg(int x1, int y1, int x2, int y2, const QString& file, int quality);

    /*
    Method CapturePng

    method CapturePng

    */
    inline int CapturePng(int x1, int y1, int x2, int y2, const QString& file);

    /*
    Method CapturePre

    method CapturePre

    */
    inline int CapturePre(const QString& file);

    /*
    Method CheckFontSmooth

    method CheckFontSmooth

    */
    inline int CheckFontSmooth();

    /*
    Method CheckInputMethod

    method CheckInputMethod

    */
    inline int CheckInputMethod(int hwnd, const QString& id);

    /*
    Method CheckUAC

    method CheckUAC

    */
    inline int CheckUAC();

    /*
    Method ClearDict

    method ClearDict

    */
    inline int ClearDict(int index);

    /*
    Method ClientToScreen

    method ClientToScreen

    */
    inline int ClientToScreen(int hwnd, QVariant& x, QVariant& y);

    /*
    Method CmpColor

    method CmpColor

    */
    inline int CmpColor(int x, int y, const QString& color, double sim);

    /*
    Method CopyFile

    method CopyFile

    */
    inline int CopyFile(const QString& src_file, const QString& dst_file, int over);

    /*
    Method CreateFolder

    method CreateFolder

    */
    inline int CreateFolder(const QString& folder_name);

    /*
    Method CreateFoobarCustom

    method CreateFoobarCustom

    */
    inline int CreateFoobarCustom(int hwnd, int x, int y, const QString& pic, const QString& trans_color, double sim);

    /*
    Method CreateFoobarEllipse

    method CreateFoobarEllipse

    */
    inline int CreateFoobarEllipse(int hwnd, int x, int y, int w, int h);

    /*
    Method CreateFoobarRect

    method CreateFoobarRect

    */
    inline int CreateFoobarRect(int hwnd, int x, int y, int w, int h);

    /*
    Method CreateFoobarRoundRect

    method CreateFoobarRoundRect

    */
    inline int CreateFoobarRoundRect(int hwnd, int x, int y, int w, int h, int rw, int rh);

    /*
    Method DecodeFile

    method DecodeFile

    */
    inline int DecodeFile(const QString& file, const QString& pwd);

    /*
    Method DelEnv

    method DelEnv

    */
    inline int DelEnv(int index, const QString& name);

    /*
    Method DeleteFile

    method DeleteFile

    */
    inline int DeleteFile(const QString& file);

    /*
    Method DeleteFolder

    method DeleteFolder

    */
    inline int DeleteFolder(const QString& folder_name);

    /*
    Method DeleteIni

    method DeleteIni

    */
    inline int DeleteIni(const QString& section, const QString& key, const QString& file);

    /*
    Method DeleteIniPwd

    method DeleteIniPwd

    */
    inline int DeleteIniPwd(const QString& section, const QString& key, const QString& file, const QString& pwd);

    /*
    Method DisableFontSmooth

    method DisableFontSmooth

    */
    inline int DisableFontSmooth();

    /*
    Method DisablePowerSave

    method DisablePowerSave

    */
    inline int DisablePowerSave();

    /*
    Method DisableScreenSave

    method DisableScreenSave

    */
    inline int DisableScreenSave();

    /*
    Method DmGuard

    method DmGuard

    */
    inline int DmGuard(int en, const QString& type);

    /*
    Method DoubleToData

    method DoubleToData

    */
    inline QString DoubleToData(double double_value);

    /*
    Method DownCpu

    method DownCpu

    */
    inline int DownCpu(int rate);

    /*
    Method DownloadFile

    method DownloadFile

    */
    inline int DownloadFile(const QString& url, const QString& save_file, int timeout);

    /*
    Method EnableBind

    method EnableBind

    */
    inline int EnableBind(int en);

    /*
    Method EnableDisplayDebug

    method EnableDisplayDebug

    */
    inline int EnableDisplayDebug(int enable_debug);

    /*
    Method EnableFakeActive

    method EnableFakeActive

    */
    inline int EnableFakeActive(int en);

    /*
    Method EnableGetColorByCapture

    method EnableGetColorByCapture

    */
    inline int EnableGetColorByCapture(int en);

    /*
    Method EnableIme

    method EnableIme

    */
    inline int EnableIme(int en);

    /*
    Method EnableKeypadMsg

    method EnableKeypadMsg

    */
    inline int EnableKeypadMsg(int en);

    /*
    Method EnableKeypadPatch

    method EnableKeypadPatch

    */
    inline int EnableKeypadPatch(int en);

    /*
    Method EnableKeypadSync

    method EnableKeypadSync

    */
    inline int EnableKeypadSync(int en, int time_out);

    /*
    Method EnableMouseMsg

    method EnableMouseMsg

    */
    inline int EnableMouseMsg(int en);

    /*
    Method EnableMouseSync

    method EnableMouseSync

    */
    inline int EnableMouseSync(int en, int time_out);

    /*
    Method EnableRealKeypad

    method EnableRealKeypad

    */
    inline int EnableRealKeypad(int en);

    /*
    Method EnableRealMouse

    method EnableRealMouse

    */
    inline int EnableRealMouse(int en, int mousedelay, int mousestep);

    /*
    Method EnableSpeedDx

    method EnableSpeedDx

    */
    inline int EnableSpeedDx(int en);

    /*
    Method EncodeFile

    method EncodeFile

    */
    inline int EncodeFile(const QString& file, const QString& pwd);

    /*
    Method EnterCri

    method EnterCri

    */
    inline int EnterCri();

    /*
    Method EnumWindow

    method EnumWindow

    */
    inline QString EnumWindow(int parent, const QString& title, const QString& class_name, int filter);

    /*
    Method EnumWindowByProcess

    method EnumWindowByProcess

    */
    inline QString EnumWindowByProcess(const QString& process_name, const QString& title, const QString& class_name, int filter);

    /*
    Method EnumWindowSuper

    method EnumWindowSuper

    */
    inline QString EnumWindowSuper(const QString& spec1, int flag1, int type1, const QString& spec2, int flag2, int type2, int sort);

    /*
    Method ExcludePos

    method ExcludePos

    */
    inline QString ExcludePos(const QString& all_pos, int type, int x1, int y1, int x2, int y2);

    /*
    Method ExitOs

    method ExitOs

    */
    inline int ExitOs(int type);

    /*
    Method FaqCancel

    method FaqCancel

    */
    inline int FaqCancel();

    /*
    Method FaqCapture

    method FaqCapture

    */
    inline int FaqCapture(int x1, int y1, int x2, int y2, int quality, int delay, int time);

    /*
    Method FaqCaptureFromFile

    method FaqCaptureFromFile

    */
    inline int FaqCaptureFromFile(int x1, int y1, int x2, int y2, const QString& file, int quality);

    /*
    Method FaqFetch

    method FaqFetch

    */
    inline QString FaqFetch();

    /*
    Method FaqGetSize

    method FaqGetSize

    */
    inline int FaqGetSize(int handle);

    /*
    Method FaqPost

    method FaqPost

    */
    inline int FaqPost(const QString& server, int handle, int request_type, int time_out);

    /*
    Method FaqRelease

    method FaqRelease

    */
    inline int FaqRelease(int handle);

    /*
    Method FaqSend

    method FaqSend

    */
    inline QString FaqSend(const QString& server, int handle, int request_type, int time_out);

    /*
    Method FetchWord

    method FetchWord

    */
    inline QString FetchWord(int x1, int y1, int x2, int y2, const QString& color, const QString& word);

    /*
    Method FindColor

    method FindColor

    */
    inline int FindColor(int x1, int y1, int x2, int y2, const QString& color, double sim, int dir, QVariant& x, QVariant& y);

    /*
    Method FindColorE

    method FindColorE

    */
    inline QString FindColorE(int x1, int y1, int x2, int y2, const QString& color, double sim, int dir);

    /*
    Method FindColorEx

    method FindColorEx

    */
    inline QString FindColorEx(int x1, int y1, int x2, int y2, const QString& color, double sim, int dir);

    /*
    Method FindData

    method FindData

    */
    inline QString FindData(int hwnd, const QString& addr_range, const QString& data);

    /*
    Method FindDataEx

    method FindDataEx

    */
    inline QString FindDataEx(int hwnd, const QString& addr_range, const QString& data, int step, int multi_thread, int mode);

    /*
    Method FindDouble

    method FindDouble

    */
    inline QString FindDouble(int hwnd, const QString& addr_range, double double_value_min, double double_value_max);

    /*
    Method FindDoubleEx

    method FindDoubleEx

    */
    inline QString FindDoubleEx(int hwnd, const QString& addr_range, double double_value_min, double double_value_max, int step, int multi_thread, int mode);

    /*
    Method FindFloat

    method FindFloat

    */
    inline QString FindFloat(int hwnd, const QString& addr_range, double float_value_min, double float_value_max);

    /*
    Method FindFloatEx

    method FindFloatEx

    */
    inline QString FindFloatEx(int hwnd, const QString& addr_range, double float_value_min, double float_value_max, int step, int multi_thread, int mode);

    /*
    Method FindInputMethod

    method FindInputMethod

    */
    inline int FindInputMethod(const QString& id);

    /*
    Method FindInt

    method FindInt

    */
    inline QString FindInt(int hwnd, const QString& addr_range, int int_value_min, int int_value_max, int type);

    /*
    Method FindIntEx

    method FindIntEx

    */
    inline QString FindIntEx(int hwnd, const QString& addr_range, int int_value_min, int int_value_max, int type, int step, int multi_thread, int mode);

    /*
    Method FindMulColor

    method FindMulColor

    */
    inline int FindMulColor(int x1, int y1, int x2, int y2, const QString& color, double sim);

    /*
    Method FindMultiColor

    method FindMultiColor

    */
    inline int FindMultiColor(int x1, int y1, int x2, int y2, const QString& first_color, const QString& offset_color, double sim, int dir, QVariant& x, QVariant& y);

    /*
    Method FindMultiColorE

    method FindMultiColorE

    */
    inline QString FindMultiColorE(int x1, int y1, int x2, int y2, const QString& first_color, const QString& offset_color, double sim, int dir);

    /*
    Method FindMultiColorEx

    method FindMultiColorEx

    */
    inline QString FindMultiColorEx(int x1, int y1, int x2, int y2, const QString& first_color, const QString& offset_color, double sim, int dir);

    /*
    Method FindNearestPos

    method FindNearestPos

    */
    inline QString FindNearestPos(const QString& all_pos, int type, int x, int y);

    /*
    Method FindPic

    method FindPic

    */
    inline int FindPic(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir, QVariant& x, QVariant& y);

    /*
    Method FindPicE

    method FindPicE

    */
    inline QString FindPicE(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir);

    /*
    Method FindPicEx

    method FindPicEx

    */
    inline QString FindPicEx(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir);

    /*
    Method FindPicExS

    method FindPicExS

    */
    inline QString FindPicExS(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir);

    /*
    Method FindPicMem

    method FindPicMem

    */
    inline int FindPicMem(int x1, int y1, int x2, int y2, const QString& pic_info, const QString& delta_color, double sim, int dir, QVariant& x, QVariant& y);

    /*
    Method FindPicMemE

    method FindPicMemE

    */
    inline QString FindPicMemE(int x1, int y1, int x2, int y2, const QString& pic_info, const QString& delta_color, double sim, int dir);

    /*
    Method FindPicMemEx

    method FindPicMemEx

    */
    inline QString FindPicMemEx(int x1, int y1, int x2, int y2, const QString& pic_info, const QString& delta_color, double sim, int dir);

    /*
    Method FindPicS

    method FindPicS

    */
    inline QString FindPicS(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir, QVariant& x, QVariant& y);

    /*
    Method FindShape

    method FindShape

    */
    inline int FindShape(int x1, int y1, int x2, int y2, const QString& offset_color, double sim, int dir, QVariant& x, QVariant& y);

    /*
    Method FindShapeE

    method FindShapeE

    */
    inline QString FindShapeE(int x1, int y1, int x2, int y2, const QString& offset_color, double sim, int dir);

    /*
    Method FindShapeEx

    method FindShapeEx

    */
    inline QString FindShapeEx(int x1, int y1, int x2, int y2, const QString& offset_color, double sim, int dir);

    /*
    Method FindStr

    method FindStr

    */
    inline int FindStr(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim, QVariant& x, QVariant& y);

    /*
    Method FindStrE

    method FindStrE

    */
    inline QString FindStrE(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim);

    /*
    Method FindStrEx

    method FindStrEx

    */
    inline QString FindStrEx(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim);

    /*
    Method FindStrExS

    method FindStrExS

    */
    inline QString FindStrExS(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim);

    /*
    Method FindStrFast

    method FindStrFast

    */
    inline int FindStrFast(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim, QVariant& x, QVariant& y);

    /*
    Method FindStrFastE

    method FindStrFastE

    */
    inline QString FindStrFastE(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim);

    /*
    Method FindStrFastEx

    method FindStrFastEx

    */
    inline QString FindStrFastEx(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim);

    /*
    Method FindStrFastExS

    method FindStrFastExS

    */
    inline QString FindStrFastExS(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim);

    /*
    Method FindStrFastS

    method FindStrFastS

    */
    inline QString FindStrFastS(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim, QVariant& x, QVariant& y);

    /*
    Method FindStrS

    method FindStrS

    */
    inline QString FindStrS(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim, QVariant& x, QVariant& y);

    /*
    Method FindStrWithFont

    method FindStrWithFont

    */
    inline int FindStrWithFont(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim, const QString& font_name, int font_size, int flag, QVariant& x, QVariant& y);

    /*
    Method FindStrWithFontE

    method FindStrWithFontE

    */
    inline QString FindStrWithFontE(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim, const QString& font_name, int font_size, int flag);

    /*
    Method FindStrWithFontEx

    method FindStrWithFontEx

    */
    inline QString FindStrWithFontEx(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim, const QString& font_name, int font_size, int flag);

    /*
    Method FindString

    method FindString

    */
    inline QString FindString(int hwnd, const QString& addr_range, const QString& string_value, int type);

    /*
    Method FindStringEx

    method FindStringEx

    */
    inline QString FindStringEx(int hwnd, const QString& addr_range, const QString& string_value, int type, int step, int multi_thread, int mode);

    /*
    Method FindWindow

    method FindWindow

    */
    inline int FindWindow(const QString& class_name, const QString& title_name);

    /*
    Method FindWindowByProcess

    method FindWindowByProcess

    */
    inline int FindWindowByProcess(const QString& process_name, const QString& class_name, const QString& title_name);

    /*
    Method FindWindowByProcessId

    method FindWindowByProcessId

    */
    inline int FindWindowByProcessId(int process_id, const QString& class_name, const QString& title_name);

    /*
    Method FindWindowEx

    method FindWindowEx

    */
    inline int FindWindowEx(int parent, const QString& class_name, const QString& title_name);

    /*
    Method FindWindowSuper

    method FindWindowSuper

    */
    inline int FindWindowSuper(const QString& spec1, int flag1, int type1, const QString& spec2, int flag2, int type2);

    /*
    Method FloatToData

    method FloatToData

    */
    inline QString FloatToData(double float_value);

    /*
    Method FoobarClearText

    method FoobarClearText

    */
    inline int FoobarClearText(int hwnd);

    /*
    Method FoobarClose

    method FoobarClose

    */
    inline int FoobarClose(int hwnd);

    /*
    Method FoobarDrawLine

    method FoobarDrawLine

    */
    inline int FoobarDrawLine(int hwnd, int x1, int y1, int x2, int y2, const QString& color, int style, int width);

    /*
    Method FoobarDrawPic

    method FoobarDrawPic

    */
    inline int FoobarDrawPic(int hwnd, int x, int y, const QString& pic, const QString& trans_color);

    /*
    Method FoobarDrawText

    method FoobarDrawText

    */
    inline int FoobarDrawText(int hwnd, int x, int y, int w, int h, const QString& text, const QString& color, int align);

    /*
    Method FoobarFillRect

    method FoobarFillRect

    */
    inline int FoobarFillRect(int hwnd, int x1, int y1, int x2, int y2, const QString& color);

    /*
    Method FoobarLock

    method FoobarLock

    */
    inline int FoobarLock(int hwnd);

    /*
    Method FoobarPrintText

    method FoobarPrintText

    */
    inline int FoobarPrintText(int hwnd, const QString& text, const QString& color);

    /*
    Method FoobarSetFont

    method FoobarSetFont

    */
    inline int FoobarSetFont(int hwnd, const QString& font_name, int size, int flag);

    /*
    Method FoobarSetSave

    method FoobarSetSave

    */
    inline int FoobarSetSave(int hwnd, const QString& file, int en, const QString& header);

    /*
    Method FoobarTextLineGap

    method FoobarTextLineGap

    */
    inline int FoobarTextLineGap(int hwnd, int gap);

    /*
    Method FoobarTextPrintDir

    method FoobarTextPrintDir

    */
    inline int FoobarTextPrintDir(int hwnd, int dir);

    /*
    Method FoobarTextRect

    method FoobarTextRect

    */
    inline int FoobarTextRect(int hwnd, int x, int y, int w, int h);

    /*
    Method FoobarUnlock

    method FoobarUnlock

    */
    inline int FoobarUnlock(int hwnd);

    /*
    Method FoobarUpdate

    method FoobarUpdate

    */
    inline int FoobarUpdate(int hwnd);

    /*
    Method ForceUnBindWindow

    method ForceUnBindWindow

    */
    inline int ForceUnBindWindow(int hwnd);

    /*
    Method FreePic

    method FreePic

    */
    inline int FreePic(const QString& pic_name);

    /*
    Method FreeScreenData

    method FreeScreenData

    */
    inline int FreeScreenData(int handle);

    /*
    Method GetAveHSV

    method GetAveHSV

    */
    inline QString GetAveHSV(int x1, int y1, int x2, int y2);

    /*
    Method GetAveRGB

    method GetAveRGB

    */
    inline QString GetAveRGB(int x1, int y1, int x2, int y2);

    /*
    Method GetBasePath

    method GetBasePath

    */
    inline QString GetBasePath();

    /*
    Method GetClientRect

    method GetClientRect

    */
    inline int GetClientRect(int hwnd, QVariant& x1, QVariant& y1, QVariant& x2, QVariant& y2);

    /*
    Method GetClientSize

    method GetClientSize

    */
    inline int GetClientSize(int hwnd, QVariant& width, QVariant& height);

    /*
    Method GetClipboard

    method GetClipboard

    */
    inline QString GetClipboard();

    /*
    Method GetColor

    method GetColor

    */
    inline QString GetColor(int x, int y);

    /*
    Method GetColorBGR

    method GetColorBGR

    */
    inline QString GetColorBGR(int x, int y);

    /*
    Method GetColorHSV

    method GetColorHSV

    */
    inline QString GetColorHSV(int x, int y);

    /*
    Method GetColorNum

    method GetColorNum

    */
    inline int GetColorNum(int x1, int y1, int x2, int y2, const QString& color, double sim);

    /*
    Method GetCursorPos

    method GetCursorPos

    */
    inline int GetCursorPos(QVariant& x, QVariant& y);

    /*
    Method GetCursorShape

    method GetCursorShape

    */
    inline QString GetCursorShape();

    /*
    Method GetCursorShapeEx

    method GetCursorShapeEx

    */
    inline QString GetCursorShapeEx(int type);

    /*
    Method GetCursorSpot

    method GetCursorSpot

    */
    inline QString GetCursorSpot();

    /*
    Method GetDict

    method GetDict

    */
    inline QString GetDict(int index, int font_index);

    /*
    Method GetDictCount

    method GetDictCount

    */
    inline int GetDictCount(int index);

    /*
    Method GetDictInfo

    method GetDictInfo

    */
    inline QString GetDictInfo(const QString& str, const QString& font_name, int font_size, int flag);

    /*
    Method GetDir

    method GetDir

    */
    inline QString GetDir(int type);

    /*
    Method GetDiskSerial

    method GetDiskSerial

    */
    inline QString GetDiskSerial();

    /*
    Method GetDmCount

    method GetDmCount

    */
    inline int GetDmCount();

    /*
    Method GetEnv

    method GetEnv

    */
    inline QString GetEnv(int index, const QString& name);

    /*
    Method GetFileLength

    method GetFileLength

    */
    inline int GetFileLength(const QString& file);

    /*
    Method GetForegroundFocus

    method GetForegroundFocus

    */
    inline int GetForegroundFocus();

    /*
    Method GetForegroundWindow

    method GetForegroundWindow

    */
    inline int GetForegroundWindow();

    /*
    Method GetID

    method GetID

    */
    inline int GetID();

    /*
    Method GetKeyState

    method GetKeyState

    */
    inline int GetKeyState(int vk);

    /*
    Method GetLastError

    method GetLastError

    */
    inline int GetLastError();

    /*
    Method GetMac

    method GetMac

    */
    inline QString GetMac();

    /*
    Method GetMachineCode

    method GetMachineCode

    */
    inline QString GetMachineCode();

    /*
    Method GetMachineCodeNoMac

    method GetMachineCodeNoMac

    */
    inline QString GetMachineCodeNoMac();

    /*
    Method GetModuleBaseAddr

    method GetModuleBaseAddr

    */
    inline int GetModuleBaseAddr(int hwnd, const QString& module_name);

    /*
    Method GetMousePointWindow

    method GetMousePointWindow

    */
    inline int GetMousePointWindow();

    /*
    Method GetNetTime

    method GetNetTime

    */
    inline QString GetNetTime();

    /*
    Method GetNetTimeSafe

    method GetNetTimeSafe

    */
    inline QString GetNetTimeSafe();

    /*
    Method GetNowDict

    method GetNowDict

    */
    inline int GetNowDict();

    /*
    Method GetOsType

    method GetOsType

    */
    inline int GetOsType();

    /*
    Method GetPath

    method GetPath

    */
    inline QString GetPath();

    /*
    Method GetPicSize

    method GetPicSize

    */
    inline QString GetPicSize(const QString& pic_name);

    /*
    Method GetPointWindow

    method GetPointWindow

    */
    inline int GetPointWindow(int x, int y);

    /*
    Method GetResultCount

    method GetResultCount

    */
    inline int GetResultCount(const QString& str);

    /*
    Method GetResultPos

    method GetResultPos

    */
    inline int GetResultPos(const QString& str, int index, QVariant& x, QVariant& y);

    /*
    Method GetScreenData

    method GetScreenData

    */
    inline int GetScreenData(int x1, int y1, int x2, int y2);

    /*
    Method GetScreenDataBmp

    method GetScreenDataBmp

    */
    inline int GetScreenDataBmp(int x1, int y1, int x2, int y2, QVariant& data, QVariant& size);

    /*
    Method GetScreenDepth

    method GetScreenDepth

    */
    inline int GetScreenDepth();

    /*
    Method GetScreenHeight

    method GetScreenHeight

    */
    inline int GetScreenHeight();

    /*
    Method GetScreenWidth

    method GetScreenWidth

    */
    inline int GetScreenWidth();

    /*
    Method GetSpecialWindow

    method GetSpecialWindow

    */
    inline int GetSpecialWindow(int flag);

    /*
    Method GetTime

    method GetTime

    */
    inline int GetTime();

    /*
    Method GetWindow

    method GetWindow

    */
    inline int GetWindow(int hwnd, int flag);

    /*
    Method GetWindowClass

    method GetWindowClass

    */
    inline QString GetWindowClass(int hwnd);

    /*
    Method GetWindowProcessId

    method GetWindowProcessId

    */
    inline int GetWindowProcessId(int hwnd);

    /*
    Method GetWindowProcessPath

    method GetWindowProcessPath

    */
    inline QString GetWindowProcessPath(int hwnd);

    /*
    Method GetWindowRect

    method GetWindowRect

    */
    inline int GetWindowRect(int hwnd, QVariant& x1, QVariant& y1, QVariant& x2, QVariant& y2);

    /*
    Method GetWindowState

    method GetWindowState

    */
    inline int GetWindowState(int hwnd, int flag);

    /*
    Method GetWindowTitle

    method GetWindowTitle

    */
    inline QString GetWindowTitle(int hwnd);

    /*
    Method GetWordResultCount

    method GetWordResultCount

    */
    inline int GetWordResultCount(const QString& str);

    /*
    Method GetWordResultPos

    method GetWordResultPos

    */
    inline int GetWordResultPos(const QString& str, int index, QVariant& x, QVariant& y);

    /*
    Method GetWordResultStr

    method GetWordResultStr

    */
    inline QString GetWordResultStr(const QString& str, int index);

    /*
    Method GetWords

    method GetWords

    */
    inline QString GetWords(int x1, int y1, int x2, int y2, const QString& color, double sim);

    /*
    Method GetWordsNoDict

    method GetWordsNoDict

    */
    inline QString GetWordsNoDict(int x1, int y1, int x2, int y2, const QString& color);

    /*
    Method ImageToBmp

    method ImageToBmp

    */
    inline int ImageToBmp(const QString& pic_name, const QString& bmp_name);

    /*
    Method IntToData

    method IntToData

    */
    inline QString IntToData(int int_value, int type);

    /*
    Method Is64Bit

    method Is64Bit

    */
    inline int Is64Bit();

    /*
    Method IsBind

    method IsBind

    */
    inline int IsBind(int hwnd);

    /*
    Method IsDisplayDead

    method IsDisplayDead

    */
    inline int IsDisplayDead(int x1, int y1, int x2, int y2, int t);

    /*
    Method IsFileExist

    method IsFileExist

    */
    inline int IsFileExist(const QString& file);

    /*
    Method KeyDown

    method KeyDown

    */
    inline int KeyDown(int vk);

    /*
    Method KeyDownChar

    method KeyDownChar

    */
    inline int KeyDownChar(const QString& key_str);

    /*
    Method KeyPress

    method KeyPress

    */
    inline int KeyPress(int vk);

    /*
    Method KeyPressChar

    method KeyPressChar

    */
    inline int KeyPressChar(const QString& key_str);

    /*
    Method KeyPressStr

    method KeyPressStr

    */
    inline int KeyPressStr(const QString& key_str, int delay);

    /*
    Method KeyUp

    method KeyUp

    */
    inline int KeyUp(int vk);

    /*
    Method KeyUpChar

    method KeyUpChar

    */
    inline int KeyUpChar(const QString& key_str);

    /*
    Method LeaveCri

    method LeaveCri

    */
    inline int LeaveCri();

    /*
    Method LeftClick

    method LeftClick

    */
    inline int LeftClick();

    /*
    Method LeftDoubleClick

    method LeftDoubleClick

    */
    inline int LeftDoubleClick();

    /*
    Method LeftDown

    method LeftDown

    */
    inline int LeftDown();

    /*
    Method LeftUp

    method LeftUp

    */
    inline int LeftUp();

    /*
    Method LoadPic

    method LoadPic

    */
    inline int LoadPic(const QString& pic_name);

    /*
    Method LockDisplay

    method LockDisplay

    */
    inline int LockDisplay(int lock);

    /*
    Method LockInput

    method LockInput

    */
    inline int LockInput(int lock);

    /*
    Method LockMouseRect

    method LockMouseRect

    */
    inline int LockMouseRect(int x1, int y1, int x2, int y2);

    /*
    Method Log

    method Log

    */
    inline int Log(const QString& info);

    /*
    Method MatchPicName

    method MatchPicName

    */
    inline QString MatchPicName(const QString& pic_name);

    /*
    Method Md5

    method Md5

    */
    inline QString Md5(const QString& str);

    /*
    Method MiddleClick

    method MiddleClick

    */
    inline int MiddleClick();

    /*
    Method MoveDD

    method MoveDD

    */
    inline int MoveDD(int dx, int dy);

    /*
    Method MoveFile

    method MoveFile

    */
    inline int MoveFile(const QString& src_file, const QString& dst_file);

    /*
    Method MoveR

    method MoveR

    */
    inline int MoveR(int rx, int ry);

    /*
    Method MoveTo

    method MoveTo

    */
    inline int MoveTo(int x, int y);

    /*
    Method MoveToEx

    method MoveToEx

    */
    inline QString MoveToEx(int x, int y, int w, int h);

    /*
    Method MoveWindow

    method MoveWindow

    */
    inline int MoveWindow(int hwnd, int x, int y);

    /*
    Method Ocr

    method Ocr

    */
    inline QString Ocr(int x1, int y1, int x2, int y2, const QString& color, double sim);

    /*
    Method OcrEx

    method OcrEx

    */
    inline QString OcrEx(int x1, int y1, int x2, int y2, const QString& color, double sim);

    /*
    Method OcrInFile

    method OcrInFile

    */
    inline QString OcrInFile(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& color, double sim);

    /*
    Method Play

    method Play

    */
    inline int Play(const QString& file);

    /*
    Method RGB2BGR

    method RGB2BGR

    */
    inline QString RGB2BGR(const QString& rgb_color);

    /*
    Method ReadData

    method ReadData

    */
    inline QString ReadData(int hwnd, const QString& addr, int len);

    /*
    Method ReadDouble

    method ReadDouble

    */
    inline double ReadDouble(int hwnd, const QString& addr);

    /*
    Method ReadFile

    method ReadFile

    */
    inline QString ReadFile(const QString& file);

    /*
    Method ReadFloat

    method ReadFloat

    */
    inline double ReadFloat(int hwnd, const QString& addr);

    /*
    Method ReadIni

    method ReadIni

    */
    inline QString ReadIni(const QString& section, const QString& key, const QString& file);

    /*
    Method ReadIniPwd

    method ReadIniPwd

    */
    inline QString ReadIniPwd(const QString& section, const QString& key, const QString& file, const QString& pwd);

    /*
    Method ReadInt

    method ReadInt

    */
    inline int ReadInt(int hwnd, const QString& addr, int type);

    /*
    Method ReadString

    method ReadString

    */
    inline QString ReadString(int hwnd, const QString& addr, int type, int len);

    /*
    Method Reg

    method Reg

    */
    inline int Reg(const QString& code, const QString& Ver);

    /*
    Method RegEx

    method RegEx

    */
    inline int RegEx(const QString& code, const QString& Ver, const QString& ip);

    /*
    Method RegExNoMac

    method RegExNoMac

    */
    inline int RegExNoMac(const QString& code, const QString& Ver, const QString& ip);

    /*
    Method RegNoMac

    method RegNoMac

    */
    inline int RegNoMac(const QString& code, const QString& Ver);

    /*
    Method RightClick

    method RightClick

    */
    inline int RightClick();

    /*
    Method RightDown

    method RightDown

    */
    inline int RightDown();

    /*
    Method RightUp

    method RightUp

    */
    inline int RightUp();

    /*
    Method RunApp

    method RunApp

    */
    inline int RunApp(const QString& path, int mode);

    /*
    Method SaveDict

    method SaveDict

    */
    inline int SaveDict(int index, const QString& file);

    /*
    Method ScreenToClient

    method ScreenToClient

    */
    inline int ScreenToClient(int hwnd, QVariant& x, QVariant& y);

    /*
    Method SelectDirectory

    method SelectDirectory

    */
    inline QString SelectDirectory();

    /*
    Method SelectFile

    method SelectFile

    */
    inline QString SelectFile();

    /*
    Method SendCommand

    method SendCommand

    */
    inline int SendCommand(const QString& cmd);

    /*
    Method SendPaste

    method SendPaste

    */
    inline int SendPaste(int hwnd);

    /*
    Method SendString

    method SendString

    */
    inline int SendString(int hwnd, const QString& str);

    /*
    Method SendString2

    method SendString2

    */
    inline int SendString2(int hwnd, const QString& str);

    /*
    Method SendStringIme

    method SendStringIme

    */
    inline int SendStringIme(const QString& str);

    /*
    Method SetClientSize

    method SetClientSize

    */
    inline int SetClientSize(int hwnd, int width, int height);

    /*
    Method SetClipboard

    method SetClipboard

    */
    inline int SetClipboard(const QString& data);

    /*
    Method SetColGapNoDict

    method SetColGapNoDict

    */
    inline int SetColGapNoDict(int col_gap);

    /*
    Method SetDict

    method SetDict

    */
    inline int SetDict(int index, const QString& dict_name);

    /*
    Method SetDictMem

    method SetDictMem

    */
    inline int SetDictMem(int index, int addr, int size);

    /*
    Method SetDictPwd

    method SetDictPwd

    */
    inline int SetDictPwd(const QString& pwd);

    /*
    Method SetDisplayAcceler

    method SetDisplayAcceler

    */
    inline int SetDisplayAcceler(int level);

    /*
    Method SetDisplayDelay

    method SetDisplayDelay

    */
    inline int SetDisplayDelay(int t);

    /*
    Method SetDisplayInput

    method SetDisplayInput

    */
    inline int SetDisplayInput(const QString& mode);

    /*
    Method SetEnumWindowDelay

    method SetEnumWindowDelay

    */
    inline int SetEnumWindowDelay(int delay);

    /*
    Method SetEnv

    method SetEnv

    */
    inline int SetEnv(int index, const QString& name, const QString& value);

    /*
    Method SetExactOcr

    method SetExactOcr

    */
    inline int SetExactOcr(int exact_ocr);

    /*
    Method SetExportDict

    method SetExportDict

    */
    inline int SetExportDict(int index, const QString& dict_name);

    /*
    Method SetKeypadDelay

    method SetKeypadDelay

    */
    inline int SetKeypadDelay(const QString& type, int delay);

    /*
    Method SetMemoryFindResultToFile

    method SetMemoryFindResultToFile

    */
    inline int SetMemoryFindResultToFile(const QString& file);

    /*
    Method SetMemoryHwndAsProcessId

    method SetMemoryHwndAsProcessId

    */
    inline int SetMemoryHwndAsProcessId(int en);

    /*
    Method SetMinColGap

    method SetMinColGap

    */
    inline int SetMinColGap(int col_gap);

    /*
    Method SetMinRowGap

    method SetMinRowGap

    */
    inline int SetMinRowGap(int row_gap);

    /*
    Method SetMouseDelay

    method SetMouseDelay

    */
    inline int SetMouseDelay(const QString& type, int delay);

    /*
    Method SetPath

    method SetPath

    */
    inline int SetPath(const QString& path);

    /*
    Method SetPicPwd

    method SetPicPwd

    */
    inline int SetPicPwd(const QString& pwd);

    /*
    Method SetRowGapNoDict

    method SetRowGapNoDict

    */
    inline int SetRowGapNoDict(int row_gap);

    /*
    Method SetScreen

    method SetScreen

    */
    inline int SetScreen(int width, int height, int depth);

    /*
    Method SetShowErrorMsg

    method SetShowErrorMsg

    */
    inline int SetShowErrorMsg(int show);

    /*
    Method SetSimMode

    method SetSimMode

    */
    inline int SetSimMode(int mode);

    /*
    Method SetUAC

    method SetUAC

    */
    inline int SetUAC(int uac);

    /*
    Method SetWindowSize

    method SetWindowSize

    */
    inline int SetWindowSize(int hwnd, int width, int height);

    /*
    Method SetWindowState

    method SetWindowState

    */
    inline int SetWindowState(int hwnd, int flag);

    /*
    Method SetWindowText

    method SetWindowText

    */
    inline int SetWindowText(int hwnd, const QString& text);

    /*
    Method SetWindowTransparent

    method SetWindowTransparent

    */
    inline int SetWindowTransparent(int hwnd, int v);

    /*
    Method SetWordGap

    method SetWordGap

    */
    inline int SetWordGap(int word_gap);

    /*
    Method SetWordGapNoDict

    method SetWordGapNoDict

    */
    inline int SetWordGapNoDict(int word_gap);

    /*
    Method SetWordLineHeight

    method SetWordLineHeight

    */
    inline int SetWordLineHeight(int line_height);

    /*
    Method SetWordLineHeightNoDict

    method SetWordLineHeightNoDict

    */
    inline int SetWordLineHeightNoDict(int line_height);

    /*
    Method ShowScrMsg

    method ShowScrMsg

    */
    inline int ShowScrMsg(int x1, int y1, int x2, int y2, const QString& msg, const QString& color);

    /*
    Method SortPosDistance

    method SortPosDistance

    */
    inline QString SortPosDistance(const QString& all_pos, int type, int x, int y);

    /*
    Method Stop

    method Stop

    */
    inline int Stop(int id);

    /*
    Method StrStr

    method StrStr

    */
    inline int StrStr(const QString& s, const QString& str);

    /*
    Method StringToData

    method StringToData

    */
    inline QString StringToData(const QString& string_value, int type);

    /*
    Method UnBindWindow

    method UnBindWindow

    */
    inline int UnBindWindow();

    /*
    Method UseDict

    method UseDict

    */
    inline int UseDict(int index);

    /*
    Method Ver

    method Ver

    */
    inline QString Ver();

    /*
    Method WaitKey

    method WaitKey

    */
    inline int WaitKey(int key_code, int time_out);

    /*
    Method WheelDown

    method WheelDown

    */
    inline int WheelDown();

    /*
    Method WheelUp

    method WheelUp

    */
    inline int WheelUp();

    /*
    Method WriteData

    method WriteData

    */
    inline int WriteData(int hwnd, const QString& addr, const QString& data);

    /*
    Method WriteDouble

    method WriteDouble

    */
    inline int WriteDouble(int hwnd, const QString& addr, double v);

    /*
    Method WriteFile

    method WriteFile

    */
    inline int WriteFile(const QString& file, const QString& content);

    /*
    Method WriteFloat

    method WriteFloat

    */
    inline int WriteFloat(int hwnd, const QString& addr, double v);

    /*
    Method WriteIni

    method WriteIni

    */
    inline int WriteIni(const QString& section, const QString& key, const QString& v, const QString& file);

    /*
    Method WriteIniPwd

    method WriteIniPwd

    */
    inline int WriteIniPwd(const QString& section, const QString& key, const QString& v, const QString& file, const QString& pwd);

    /*
    Method WriteInt

    method WriteInt

    */
    inline int WriteInt(int hwnd, const QString& addr, int type, int v);

    /*
    Method WriteString

    method WriteString

    */
    inline int WriteString(int hwnd, const QString& addr, int type, const QString& v);

    /*
    Method delay

    method Delay

    */
    inline int delay(int mis);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// Actual coclasses
class DM_EXPORT dmsoft : public QAxObject
{
public:
    explicit dmsoft(QObject *parent = nullptr);
    dmsoft(Idmsoft *iface)
    : QAxObject()
    {
        initializeFrom(iface);
        delete iface;
    }

    /*
    Method ActiveInputMethod

    method ActiveInputMethod

    */
    inline int ActiveInputMethod(int hwnd, const QString& id);

    /*
    Method AddDict

    method AddDict

    */
    inline int AddDict(int index, const QString& dict_info);

    /*
    Method AppendPicAddr

    method AppendPicAddr

    */
    inline QString AppendPicAddr(const QString& pic_info, int addr, int size);

    /*
    Method AsmAdd

    method AsmAdd

    */
    inline int AsmAdd(const QString& asm_ins);

    /*
    Method AsmCall

    method AsmCall

    */
    inline int AsmCall(int hwnd, int mode);

    /*
    Method AsmClear

    method AsmClear

    */
    inline int AsmClear();

    /*
    Method AsmCode

    method AsmCode

    */
    inline QString AsmCode(int base_addr);

    /*
    Method Assemble

    method Assemble

    */
    inline QString Assemble(const QString& asm_code, int base_addr, int is_upper);

    /*
    Method BGR2RGB

    method BGR2RGB

    */
    inline QString BGR2RGB(const QString& bgr_color);

    /*
    Method Beep

    method Beep

    */
    inline int Beep(int fre, int delay);

    /*
    Method BindWindow

    method BindWindow

    */
    inline int BindWindow(int hwnd, const QString& display, const QString& mouse, const QString& keypad, int mode);

    /*
    Method BindWindowEx

    method BindWindowEx

    */
    inline int BindWindowEx(int hwnd, const QString& display, const QString& mouse, const QString& keypad, const QString& public_desc, int mode);

    /*
    Method Capture

    method Capture

    */
    inline int Capture(int x1, int y1, int x2, int y2, const QString& file);

    /*
    Method CaptureGif

    method CaptureGif

    */
    inline int CaptureGif(int x1, int y1, int x2, int y2, const QString& file, int delay, int time);

    /*
    Method CaptureJpg

    method CaptureJpg

    */
    inline int CaptureJpg(int x1, int y1, int x2, int y2, const QString& file, int quality);

    /*
    Method CapturePng

    method CapturePng

    */
    inline int CapturePng(int x1, int y1, int x2, int y2, const QString& file);

    /*
    Method CapturePre

    method CapturePre

    */
    inline int CapturePre(const QString& file);

    /*
    Method CheckFontSmooth

    method CheckFontSmooth

    */
    inline int CheckFontSmooth();

    /*
    Method CheckInputMethod

    method CheckInputMethod

    */
    inline int CheckInputMethod(int hwnd, const QString& id);

    /*
    Method CheckUAC

    method CheckUAC

    */
    inline int CheckUAC();

    /*
    Method ClearDict

    method ClearDict

    */
    inline int ClearDict(int index);

    /*
    Method ClientToScreen

    method ClientToScreen

    */
    inline int ClientToScreen(int hwnd, QVariant& x, QVariant& y);

    /*
    Method CmpColor

    method CmpColor

    */
    inline int CmpColor(int x, int y, const QString& color, double sim);

    /*
    Method CopyFile

    method CopyFile

    */
    inline int CopyFile(const QString& src_file, const QString& dst_file, int over);

    /*
    Method CreateFolder

    method CreateFolder

    */
    inline int CreateFolder(const QString& folder_name);

    /*
    Method CreateFoobarCustom

    method CreateFoobarCustom

    */
    inline int CreateFoobarCustom(int hwnd, int x, int y, const QString& pic, const QString& trans_color, double sim);

    /*
    Method CreateFoobarEllipse

    method CreateFoobarEllipse

    */
    inline int CreateFoobarEllipse(int hwnd, int x, int y, int w, int h);

    /*
    Method CreateFoobarRect

    method CreateFoobarRect

    */
    inline int CreateFoobarRect(int hwnd, int x, int y, int w, int h);

    /*
    Method CreateFoobarRoundRect

    method CreateFoobarRoundRect

    */
    inline int CreateFoobarRoundRect(int hwnd, int x, int y, int w, int h, int rw, int rh);

    /*
    Method DecodeFile

    method DecodeFile

    */
    inline int DecodeFile(const QString& file, const QString& pwd);

    /*
    Method DelEnv

    method DelEnv

    */
    inline int DelEnv(int index, const QString& name);

    /*
    Method DeleteFile

    method DeleteFile

    */
    inline int DeleteFile(const QString& file);

    /*
    Method DeleteFolder

    method DeleteFolder

    */
    inline int DeleteFolder(const QString& folder_name);

    /*
    Method DeleteIni

    method DeleteIni

    */
    inline int DeleteIni(const QString& section, const QString& key, const QString& file);

    /*
    Method DeleteIniPwd

    method DeleteIniPwd

    */
    inline int DeleteIniPwd(const QString& section, const QString& key, const QString& file, const QString& pwd);

    /*
    Method DisableFontSmooth

    method DisableFontSmooth

    */
    inline int DisableFontSmooth();

    /*
    Method DisablePowerSave

    method DisablePowerSave

    */
    inline int DisablePowerSave();

    /*
    Method DisableScreenSave

    method DisableScreenSave

    */
    inline int DisableScreenSave();

    /*
    Method DmGuard

    method DmGuard

    */
    inline int DmGuard(int en, const QString& type);

    /*
    Method DoubleToData

    method DoubleToData

    */
    inline QString DoubleToData(double double_value);

    /*
    Method DownCpu

    method DownCpu

    */
    inline int DownCpu(int rate);

    /*
    Method DownloadFile

    method DownloadFile

    */
    inline int DownloadFile(const QString& url, const QString& save_file, int timeout);

    /*
    Method EnableBind

    method EnableBind

    */
    inline int EnableBind(int en);

    /*
    Method EnableDisplayDebug

    method EnableDisplayDebug

    */
    inline int EnableDisplayDebug(int enable_debug);

    /*
    Method EnableFakeActive

    method EnableFakeActive

    */
    inline int EnableFakeActive(int en);

    /*
    Method EnableGetColorByCapture

    method EnableGetColorByCapture

    */
    inline int EnableGetColorByCapture(int en);

    /*
    Method EnableIme

    method EnableIme

    */
    inline int EnableIme(int en);

    /*
    Method EnableKeypadMsg

    method EnableKeypadMsg

    */
    inline int EnableKeypadMsg(int en);

    /*
    Method EnableKeypadPatch

    method EnableKeypadPatch

    */
    inline int EnableKeypadPatch(int en);

    /*
    Method EnableKeypadSync

    method EnableKeypadSync

    */
    inline int EnableKeypadSync(int en, int time_out);

    /*
    Method EnableMouseMsg

    method EnableMouseMsg

    */
    inline int EnableMouseMsg(int en);

    /*
    Method EnableMouseSync

    method EnableMouseSync

    */
    inline int EnableMouseSync(int en, int time_out);

    /*
    Method EnableRealKeypad

    method EnableRealKeypad

    */
    inline int EnableRealKeypad(int en);

    /*
    Method EnableRealMouse

    method EnableRealMouse

    */
    inline int EnableRealMouse(int en, int mousedelay, int mousestep);

    /*
    Method EnableSpeedDx

    method EnableSpeedDx

    */
    inline int EnableSpeedDx(int en);

    /*
    Method EncodeFile

    method EncodeFile

    */
    inline int EncodeFile(const QString& file, const QString& pwd);

    /*
    Method EnterCri

    method EnterCri

    */
    inline int EnterCri();

    /*
    Method EnumWindow

    method EnumWindow

    */
    inline QString EnumWindow(int parent, const QString& title, const QString& class_name, int filter);

    /*
    Method EnumWindowByProcess

    method EnumWindowByProcess

    */
    inline QString EnumWindowByProcess(const QString& process_name, const QString& title, const QString& class_name, int filter);

    /*
    Method EnumWindowSuper

    method EnumWindowSuper

    */
    inline QString EnumWindowSuper(const QString& spec1, int flag1, int type1, const QString& spec2, int flag2, int type2, int sort);

    /*
    Method ExcludePos

    method ExcludePos

    */
    inline QString ExcludePos(const QString& all_pos, int type, int x1, int y1, int x2, int y2);

    /*
    Method ExitOs

    method ExitOs

    */
    inline int ExitOs(int type);

    /*
    Method FaqCancel

    method FaqCancel

    */
    inline int FaqCancel();

    /*
    Method FaqCapture

    method FaqCapture

    */
    inline int FaqCapture(int x1, int y1, int x2, int y2, int quality, int delay, int time);

    /*
    Method FaqCaptureFromFile

    method FaqCaptureFromFile

    */
    inline int FaqCaptureFromFile(int x1, int y1, int x2, int y2, const QString& file, int quality);

    /*
    Method FaqFetch

    method FaqFetch

    */
    inline QString FaqFetch();

    /*
    Method FaqGetSize

    method FaqGetSize

    */
    inline int FaqGetSize(int handle);

    /*
    Method FaqPost

    method FaqPost

    */
    inline int FaqPost(const QString& server, int handle, int request_type, int time_out);

    /*
    Method FaqRelease

    method FaqRelease

    */
    inline int FaqRelease(int handle);

    /*
    Method FaqSend

    method FaqSend

    */
    inline QString FaqSend(const QString& server, int handle, int request_type, int time_out);

    /*
    Method FetchWord

    method FetchWord

    */
    inline QString FetchWord(int x1, int y1, int x2, int y2, const QString& color, const QString& word);

    /*
    Method FindColor

    method FindColor

    */
    inline int FindColor(int x1, int y1, int x2, int y2, const QString& color, double sim, int dir, QVariant& x, QVariant& y);

    /*
    Method FindColorE

    method FindColorE

    */
    inline QString FindColorE(int x1, int y1, int x2, int y2, const QString& color, double sim, int dir);

    /*
    Method FindColorEx

    method FindColorEx

    */
    inline QString FindColorEx(int x1, int y1, int x2, int y2, const QString& color, double sim, int dir);

    /*
    Method FindData

    method FindData

    */
    inline QString FindData(int hwnd, const QString& addr_range, const QString& data);

    /*
    Method FindDataEx

    method FindDataEx

    */
    inline QString FindDataEx(int hwnd, const QString& addr_range, const QString& data, int step, int multi_thread, int mode);

    /*
    Method FindDouble

    method FindDouble

    */
    inline QString FindDouble(int hwnd, const QString& addr_range, double double_value_min, double double_value_max);

    /*
    Method FindDoubleEx

    method FindDoubleEx

    */
    inline QString FindDoubleEx(int hwnd, const QString& addr_range, double double_value_min, double double_value_max, int step, int multi_thread, int mode);

    /*
    Method FindFloat

    method FindFloat

    */
    inline QString FindFloat(int hwnd, const QString& addr_range, double float_value_min, double float_value_max);

    /*
    Method FindFloatEx

    method FindFloatEx

    */
    inline QString FindFloatEx(int hwnd, const QString& addr_range, double float_value_min, double float_value_max, int step, int multi_thread, int mode);

    /*
    Method FindInputMethod

    method FindInputMethod

    */
    inline int FindInputMethod(const QString& id);

    /*
    Method FindInt

    method FindInt

    */
    inline QString FindInt(int hwnd, const QString& addr_range, int int_value_min, int int_value_max, int type);

    /*
    Method FindIntEx

    method FindIntEx

    */
    inline QString FindIntEx(int hwnd, const QString& addr_range, int int_value_min, int int_value_max, int type, int step, int multi_thread, int mode);

    /*
    Method FindMulColor

    method FindMulColor

    */
    inline int FindMulColor(int x1, int y1, int x2, int y2, const QString& color, double sim);

    /*
    Method FindMultiColor

    method FindMultiColor

    */
    inline int FindMultiColor(int x1, int y1, int x2, int y2, const QString& first_color, const QString& offset_color, double sim, int dir, QVariant& x, QVariant& y);

    /*
    Method FindMultiColorE

    method FindMultiColorE

    */
    inline QString FindMultiColorE(int x1, int y1, int x2, int y2, const QString& first_color, const QString& offset_color, double sim, int dir);

    /*
    Method FindMultiColorEx

    method FindMultiColorEx

    */
    inline QString FindMultiColorEx(int x1, int y1, int x2, int y2, const QString& first_color, const QString& offset_color, double sim, int dir);

    /*
    Method FindNearestPos

    method FindNearestPos

    */
    inline QString FindNearestPos(const QString& all_pos, int type, int x, int y);

    /*
    Method FindPic

    method FindPic

    */
    inline int FindPic(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir, QVariant& x, QVariant& y);

    /*
    Method FindPicE

    method FindPicE

    */
    inline QString FindPicE(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir);

    /*
    Method FindPicEx

    method FindPicEx

    */
    inline QString FindPicEx(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir);

    /*
    Method FindPicExS

    method FindPicExS

    */
    inline QString FindPicExS(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir);

    /*
    Method FindPicMem

    method FindPicMem

    */
    inline int FindPicMem(int x1, int y1, int x2, int y2, const QString& pic_info, const QString& delta_color, double sim, int dir, QVariant& x, QVariant& y);

    /*
    Method FindPicMemE

    method FindPicMemE

    */
    inline QString FindPicMemE(int x1, int y1, int x2, int y2, const QString& pic_info, const QString& delta_color, double sim, int dir);

    /*
    Method FindPicMemEx

    method FindPicMemEx

    */
    inline QString FindPicMemEx(int x1, int y1, int x2, int y2, const QString& pic_info, const QString& delta_color, double sim, int dir);

    /*
    Method FindPicS

    method FindPicS

    */
    inline QString FindPicS(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir, QVariant& x, QVariant& y);

    /*
    Method FindShape

    method FindShape

    */
    inline int FindShape(int x1, int y1, int x2, int y2, const QString& offset_color, double sim, int dir, QVariant& x, QVariant& y);

    /*
    Method FindShapeE

    method FindShapeE

    */
    inline QString FindShapeE(int x1, int y1, int x2, int y2, const QString& offset_color, double sim, int dir);

    /*
    Method FindShapeEx

    method FindShapeEx

    */
    inline QString FindShapeEx(int x1, int y1, int x2, int y2, const QString& offset_color, double sim, int dir);

    /*
    Method FindStr

    method FindStr

    */
    inline int FindStr(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim, QVariant& x, QVariant& y);

    /*
    Method FindStrE

    method FindStrE

    */
    inline QString FindStrE(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim);

    /*
    Method FindStrEx

    method FindStrEx

    */
    inline QString FindStrEx(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim);

    /*
    Method FindStrExS

    method FindStrExS

    */
    inline QString FindStrExS(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim);

    /*
    Method FindStrFast

    method FindStrFast

    */
    inline int FindStrFast(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim, QVariant& x, QVariant& y);

    /*
    Method FindStrFastE

    method FindStrFastE

    */
    inline QString FindStrFastE(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim);

    /*
    Method FindStrFastEx

    method FindStrFastEx

    */
    inline QString FindStrFastEx(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim);

    /*
    Method FindStrFastExS

    method FindStrFastExS

    */
    inline QString FindStrFastExS(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim);

    /*
    Method FindStrFastS

    method FindStrFastS

    */
    inline QString FindStrFastS(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim, QVariant& x, QVariant& y);

    /*
    Method FindStrS

    method FindStrS

    */
    inline QString FindStrS(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim, QVariant& x, QVariant& y);

    /*
    Method FindStrWithFont

    method FindStrWithFont

    */
    inline int FindStrWithFont(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim, const QString& font_name, int font_size, int flag, QVariant& x, QVariant& y);

    /*
    Method FindStrWithFontE

    method FindStrWithFontE

    */
    inline QString FindStrWithFontE(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim, const QString& font_name, int font_size, int flag);

    /*
    Method FindStrWithFontEx

    method FindStrWithFontEx

    */
    inline QString FindStrWithFontEx(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim, const QString& font_name, int font_size, int flag);

    /*
    Method FindString

    method FindString

    */
    inline QString FindString(int hwnd, const QString& addr_range, const QString& string_value, int type);

    /*
    Method FindStringEx

    method FindStringEx

    */
    inline QString FindStringEx(int hwnd, const QString& addr_range, const QString& string_value, int type, int step, int multi_thread, int mode);

    /*
    Method FindWindow

    method FindWindow

    */
    inline int FindWindow(const QString& class_name, const QString& title_name);

    /*
    Method FindWindowByProcess

    method FindWindowByProcess

    */
    inline int FindWindowByProcess(const QString& process_name, const QString& class_name, const QString& title_name);

    /*
    Method FindWindowByProcessId

    method FindWindowByProcessId

    */
    inline int FindWindowByProcessId(int process_id, const QString& class_name, const QString& title_name);

    /*
    Method FindWindowEx

    method FindWindowEx

    */
    inline int FindWindowEx(int parent, const QString& class_name, const QString& title_name);

    /*
    Method FindWindowSuper

    method FindWindowSuper

    */
    inline int FindWindowSuper(const QString& spec1, int flag1, int type1, const QString& spec2, int flag2, int type2);

    /*
    Method FloatToData

    method FloatToData

    */
    inline QString FloatToData(double float_value);

    /*
    Method FoobarClearText

    method FoobarClearText

    */
    inline int FoobarClearText(int hwnd);

    /*
    Method FoobarClose

    method FoobarClose

    */
    inline int FoobarClose(int hwnd);

    /*
    Method FoobarDrawLine

    method FoobarDrawLine

    */
    inline int FoobarDrawLine(int hwnd, int x1, int y1, int x2, int y2, const QString& color, int style, int width);

    /*
    Method FoobarDrawPic

    method FoobarDrawPic

    */
    inline int FoobarDrawPic(int hwnd, int x, int y, const QString& pic, const QString& trans_color);

    /*
    Method FoobarDrawText

    method FoobarDrawText

    */
    inline int FoobarDrawText(int hwnd, int x, int y, int w, int h, const QString& text, const QString& color, int align);

    /*
    Method FoobarFillRect

    method FoobarFillRect

    */
    inline int FoobarFillRect(int hwnd, int x1, int y1, int x2, int y2, const QString& color);

    /*
    Method FoobarLock

    method FoobarLock

    */
    inline int FoobarLock(int hwnd);

    /*
    Method FoobarPrintText

    method FoobarPrintText

    */
    inline int FoobarPrintText(int hwnd, const QString& text, const QString& color);

    /*
    Method FoobarSetFont

    method FoobarSetFont

    */
    inline int FoobarSetFont(int hwnd, const QString& font_name, int size, int flag);

    /*
    Method FoobarSetSave

    method FoobarSetSave

    */
    inline int FoobarSetSave(int hwnd, const QString& file, int en, const QString& header);

    /*
    Method FoobarTextLineGap

    method FoobarTextLineGap

    */
    inline int FoobarTextLineGap(int hwnd, int gap);

    /*
    Method FoobarTextPrintDir

    method FoobarTextPrintDir

    */
    inline int FoobarTextPrintDir(int hwnd, int dir);

    /*
    Method FoobarTextRect

    method FoobarTextRect

    */
    inline int FoobarTextRect(int hwnd, int x, int y, int w, int h);

    /*
    Method FoobarUnlock

    method FoobarUnlock

    */
    inline int FoobarUnlock(int hwnd);

    /*
    Method FoobarUpdate

    method FoobarUpdate

    */
    inline int FoobarUpdate(int hwnd);

    /*
    Method ForceUnBindWindow

    method ForceUnBindWindow

    */
    inline int ForceUnBindWindow(int hwnd);

    /*
    Method FreePic

    method FreePic

    */
    inline int FreePic(const QString& pic_name);

    /*
    Method FreeScreenData

    method FreeScreenData

    */
    inline int FreeScreenData(int handle);

    /*
    Method GetAveHSV

    method GetAveHSV

    */
    inline QString GetAveHSV(int x1, int y1, int x2, int y2);

    /*
    Method GetAveRGB

    method GetAveRGB

    */
    inline QString GetAveRGB(int x1, int y1, int x2, int y2);

    /*
    Method GetBasePath

    method GetBasePath

    */
    inline QString GetBasePath();

    /*
    Method GetClientRect

    method GetClientRect

    */
    inline int GetClientRect(int hwnd, QVariant& x1, QVariant& y1, QVariant& x2, QVariant& y2);

    /*
    Method GetClientSize

    method GetClientSize

    */
    inline int GetClientSize(int hwnd, QVariant& width, QVariant& height);

    /*
    Method GetClipboard

    method GetClipboard

    */
    inline QString GetClipboard();

    /*
    Method GetColor

    method GetColor

    */
    inline QString GetColor(int x, int y);

    /*
    Method GetColorBGR

    method GetColorBGR

    */
    inline QString GetColorBGR(int x, int y);

    /*
    Method GetColorHSV

    method GetColorHSV

    */
    inline QString GetColorHSV(int x, int y);

    /*
    Method GetColorNum

    method GetColorNum

    */
    inline int GetColorNum(int x1, int y1, int x2, int y2, const QString& color, double sim);

    /*
    Method GetCursorPos

    method GetCursorPos

    */
    inline int GetCursorPos(QVariant& x, QVariant& y);

    /*
    Method GetCursorShape

    method GetCursorShape

    */
    inline QString GetCursorShape();

    /*
    Method GetCursorShapeEx

    method GetCursorShapeEx

    */
    inline QString GetCursorShapeEx(int type);

    /*
    Method GetCursorSpot

    method GetCursorSpot

    */
    inline QString GetCursorSpot();

    /*
    Method GetDict

    method GetDict

    */
    inline QString GetDict(int index, int font_index);

    /*
    Method GetDictCount

    method GetDictCount

    */
    inline int GetDictCount(int index);

    /*
    Method GetDictInfo

    method GetDictInfo

    */
    inline QString GetDictInfo(const QString& str, const QString& font_name, int font_size, int flag);

    /*
    Method GetDir

    method GetDir

    */
    inline QString GetDir(int type);

    /*
    Method GetDiskSerial

    method GetDiskSerial

    */
    inline QString GetDiskSerial();

    /*
    Method GetDmCount

    method GetDmCount

    */
    inline int GetDmCount();

    /*
    Method GetEnv

    method GetEnv

    */
    inline QString GetEnv(int index, const QString& name);

    /*
    Method GetFileLength

    method GetFileLength

    */
    inline int GetFileLength(const QString& file);

    /*
    Method GetForegroundFocus

    method GetForegroundFocus

    */
    inline int GetForegroundFocus();

    /*
    Method GetForegroundWindow

    method GetForegroundWindow

    */
    inline int GetForegroundWindow();

    /*
    Method GetID

    method GetID

    */
    inline int GetID();

    /*
    Method GetKeyState

    method GetKeyState

    */
    inline int GetKeyState(int vk);

    /*
    Method GetLastError

    method GetLastError

    */
    inline int GetLastError();

    /*
    Method GetMac

    method GetMac

    */
    inline QString GetMac();

    /*
    Method GetMachineCode

    method GetMachineCode

    */
    inline QString GetMachineCode();

    /*
    Method GetMachineCodeNoMac

    method GetMachineCodeNoMac

    */
    inline QString GetMachineCodeNoMac();

    /*
    Method GetModuleBaseAddr

    method GetModuleBaseAddr

    */
    inline int GetModuleBaseAddr(int hwnd, const QString& module_name);

    /*
    Method GetMousePointWindow

    method GetMousePointWindow

    */
    inline int GetMousePointWindow();

    /*
    Method GetNetTime

    method GetNetTime

    */
    inline QString GetNetTime();

    /*
    Method GetNetTimeSafe

    method GetNetTimeSafe

    */
    inline QString GetNetTimeSafe();

    /*
    Method GetNowDict

    method GetNowDict

    */
    inline int GetNowDict();

    /*
    Method GetOsType

    method GetOsType

    */
    inline int GetOsType();

    /*
    Method GetPath

    method GetPath

    */
    inline QString GetPath();

    /*
    Method GetPicSize

    method GetPicSize

    */
    inline QString GetPicSize(const QString& pic_name);

    /*
    Method GetPointWindow

    method GetPointWindow

    */
    inline int GetPointWindow(int x, int y);

    /*
    Method GetResultCount

    method GetResultCount

    */
    inline int GetResultCount(const QString& str);

    /*
    Method GetResultPos

    method GetResultPos

    */
    inline int GetResultPos(const QString& str, int index, QVariant& x, QVariant& y);

    /*
    Method GetScreenData

    method GetScreenData

    */
    inline int GetScreenData(int x1, int y1, int x2, int y2);

    /*
    Method GetScreenDataBmp

    method GetScreenDataBmp

    */
    inline int GetScreenDataBmp(int x1, int y1, int x2, int y2, QVariant& data, QVariant& size);

    /*
    Method GetScreenDepth

    method GetScreenDepth

    */
    inline int GetScreenDepth();

    /*
    Method GetScreenHeight

    method GetScreenHeight

    */
    inline int GetScreenHeight();

    /*
    Method GetScreenWidth

    method GetScreenWidth

    */
    inline int GetScreenWidth();

    /*
    Method GetSpecialWindow

    method GetSpecialWindow

    */
    inline int GetSpecialWindow(int flag);

    /*
    Method GetTime

    method GetTime

    */
    inline int GetTime();

    /*
    Method GetWindow

    method GetWindow

    */
    inline int GetWindow(int hwnd, int flag);

    /*
    Method GetWindowClass

    method GetWindowClass

    */
    inline QString GetWindowClass(int hwnd);

    /*
    Method GetWindowProcessId

    method GetWindowProcessId

    */
    inline int GetWindowProcessId(int hwnd);

    /*
    Method GetWindowProcessPath

    method GetWindowProcessPath

    */
    inline QString GetWindowProcessPath(int hwnd);

    /*
    Method GetWindowRect

    method GetWindowRect

    */
    inline int GetWindowRect(int hwnd, QVariant& x1, QVariant& y1, QVariant& x2, QVariant& y2);

    /*
    Method GetWindowState

    method GetWindowState

    */
    inline int GetWindowState(int hwnd, int flag);

    /*
    Method GetWindowTitle

    method GetWindowTitle

    */
    inline QString GetWindowTitle(int hwnd);

    /*
    Method GetWordResultCount

    method GetWordResultCount

    */
    inline int GetWordResultCount(const QString& str);

    /*
    Method GetWordResultPos

    method GetWordResultPos

    */
    inline int GetWordResultPos(const QString& str, int index, QVariant& x, QVariant& y);

    /*
    Method GetWordResultStr

    method GetWordResultStr

    */
    inline QString GetWordResultStr(const QString& str, int index);

    /*
    Method GetWords

    method GetWords

    */
    inline QString GetWords(int x1, int y1, int x2, int y2, const QString& color, double sim);

    /*
    Method GetWordsNoDict

    method GetWordsNoDict

    */
    inline QString GetWordsNoDict(int x1, int y1, int x2, int y2, const QString& color);

    /*
    Method ImageToBmp

    method ImageToBmp

    */
    inline int ImageToBmp(const QString& pic_name, const QString& bmp_name);

    /*
    Method IntToData

    method IntToData

    */
    inline QString IntToData(int int_value, int type);

    /*
    Method Is64Bit

    method Is64Bit

    */
    inline int Is64Bit();

    /*
    Method IsBind

    method IsBind

    */
    inline int IsBind(int hwnd);

    /*
    Method IsDisplayDead

    method IsDisplayDead

    */
    inline int IsDisplayDead(int x1, int y1, int x2, int y2, int t);

    /*
    Method IsFileExist

    method IsFileExist

    */
    inline int IsFileExist(const QString& file);

    /*
    Method KeyDown

    method KeyDown

    */
    inline int KeyDown(int vk);

    /*
    Method KeyDownChar

    method KeyDownChar

    */
    inline int KeyDownChar(const QString& key_str);

    /*
    Method KeyPress

    method KeyPress

    */
    inline int KeyPress(int vk);

    /*
    Method KeyPressChar

    method KeyPressChar

    */
    inline int KeyPressChar(const QString& key_str);

    /*
    Method KeyPressStr

    method KeyPressStr

    */
    inline int KeyPressStr(const QString& key_str, int delay);

    /*
    Method KeyUp

    method KeyUp

    */
    inline int KeyUp(int vk);

    /*
    Method KeyUpChar

    method KeyUpChar

    */
    inline int KeyUpChar(const QString& key_str);

    /*
    Method LeaveCri

    method LeaveCri

    */
    inline int LeaveCri();

    /*
    Method LeftClick

    method LeftClick

    */
    inline int LeftClick();

    /*
    Method LeftDoubleClick

    method LeftDoubleClick

    */
    inline int LeftDoubleClick();

    /*
    Method LeftDown

    method LeftDown

    */
    inline int LeftDown();

    /*
    Method LeftUp

    method LeftUp

    */
    inline int LeftUp();

    /*
    Method LoadPic

    method LoadPic

    */
    inline int LoadPic(const QString& pic_name);

    /*
    Method LockDisplay

    method LockDisplay

    */
    inline int LockDisplay(int lock);

    /*
    Method LockInput

    method LockInput

    */
    inline int LockInput(int lock);

    /*
    Method LockMouseRect

    method LockMouseRect

    */
    inline int LockMouseRect(int x1, int y1, int x2, int y2);

    /*
    Method Log

    method Log

    */
    inline int Log(const QString& info);

    /*
    Method MatchPicName

    method MatchPicName

    */
    inline QString MatchPicName(const QString& pic_name);

    /*
    Method Md5

    method Md5

    */
    inline QString Md5(const QString& str);

    /*
    Method MiddleClick

    method MiddleClick

    */
    inline int MiddleClick();

    /*
    Method MoveDD

    method MoveDD

    */
    inline int MoveDD(int dx, int dy);

    /*
    Method MoveFile

    method MoveFile

    */
    inline int MoveFile(const QString& src_file, const QString& dst_file);

    /*
    Method MoveR

    method MoveR

    */
    inline int MoveR(int rx, int ry);

    /*
    Method MoveTo

    method MoveTo

    */
    inline int MoveTo(int x, int y);

    /*
    Method MoveToEx

    method MoveToEx

    */
    inline QString MoveToEx(int x, int y, int w, int h);

    /*
    Method MoveWindow

    method MoveWindow

    */
    inline int MoveWindow(int hwnd, int x, int y);

    /*
    Method Ocr

    method Ocr

    */
    inline QString Ocr(int x1, int y1, int x2, int y2, const QString& color, double sim);

    /*
    Method OcrEx

    method OcrEx

    */
    inline QString OcrEx(int x1, int y1, int x2, int y2, const QString& color, double sim);

    /*
    Method OcrInFile

    method OcrInFile

    */
    inline QString OcrInFile(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& color, double sim);

    /*
    Method Play

    method Play

    */
    inline int Play(const QString& file);

    /*
    Method RGB2BGR

    method RGB2BGR

    */
    inline QString RGB2BGR(const QString& rgb_color);

    /*
    Method ReadData

    method ReadData

    */
    inline QString ReadData(int hwnd, const QString& addr, int len);

    /*
    Method ReadDouble

    method ReadDouble

    */
    inline double ReadDouble(int hwnd, const QString& addr);

    /*
    Method ReadFile

    method ReadFile

    */
    inline QString ReadFile(const QString& file);

    /*
    Method ReadFloat

    method ReadFloat

    */
    inline double ReadFloat(int hwnd, const QString& addr);

    /*
    Method ReadIni

    method ReadIni

    */
    inline QString ReadIni(const QString& section, const QString& key, const QString& file);

    /*
    Method ReadIniPwd

    method ReadIniPwd

    */
    inline QString ReadIniPwd(const QString& section, const QString& key, const QString& file, const QString& pwd);

    /*
    Method ReadInt

    method ReadInt

    */
    inline int ReadInt(int hwnd, const QString& addr, int type);

    /*
    Method ReadString

    method ReadString

    */
    inline QString ReadString(int hwnd, const QString& addr, int type, int len);

    /*
    Method Reg

    method Reg

    */
    inline int Reg(const QString& code, const QString& Ver);

    /*
    Method RegEx

    method RegEx

    */
    inline int RegEx(const QString& code, const QString& Ver, const QString& ip);

    /*
    Method RegExNoMac

    method RegExNoMac

    */
    inline int RegExNoMac(const QString& code, const QString& Ver, const QString& ip);

    /*
    Method RegNoMac

    method RegNoMac

    */
    inline int RegNoMac(const QString& code, const QString& Ver);

    /*
    Method RightClick

    method RightClick

    */
    inline int RightClick();

    /*
    Method RightDown

    method RightDown

    */
    inline int RightDown();

    /*
    Method RightUp

    method RightUp

    */
    inline int RightUp();

    /*
    Method RunApp

    method RunApp

    */
    inline int RunApp(const QString& path, int mode);

    /*
    Method SaveDict

    method SaveDict

    */
    inline int SaveDict(int index, const QString& file);

    /*
    Method ScreenToClient

    method ScreenToClient

    */
    inline int ScreenToClient(int hwnd, QVariant& x, QVariant& y);

    /*
    Method SelectDirectory

    method SelectDirectory

    */
    inline QString SelectDirectory();

    /*
    Method SelectFile

    method SelectFile

    */
    inline QString SelectFile();

    /*
    Method SendCommand

    method SendCommand

    */
    inline int SendCommand(const QString& cmd);

    /*
    Method SendPaste

    method SendPaste

    */
    inline int SendPaste(int hwnd);

    /*
    Method SendString

    method SendString

    */
    inline int SendString(int hwnd, const QString& str);

    /*
    Method SendString2

    method SendString2

    */
    inline int SendString2(int hwnd, const QString& str);

    /*
    Method SendStringIme

    method SendStringIme

    */
    inline int SendStringIme(const QString& str);

    /*
    Method SetClientSize

    method SetClientSize

    */
    inline int SetClientSize(int hwnd, int width, int height);

    /*
    Method SetClipboard

    method SetClipboard

    */
    inline int SetClipboard(const QString& data);

    /*
    Method SetColGapNoDict

    method SetColGapNoDict

    */
    inline int SetColGapNoDict(int col_gap);

    /*
    Method SetDict

    method SetDict

    */
    inline int SetDict(int index, const QString& dict_name);

    /*
    Method SetDictMem

    method SetDictMem

    */
    inline int SetDictMem(int index, int addr, int size);

    /*
    Method SetDictPwd

    method SetDictPwd

    */
    inline int SetDictPwd(const QString& pwd);

    /*
    Method SetDisplayAcceler

    method SetDisplayAcceler

    */
    inline int SetDisplayAcceler(int level);

    /*
    Method SetDisplayDelay

    method SetDisplayDelay

    */
    inline int SetDisplayDelay(int t);

    /*
    Method SetDisplayInput

    method SetDisplayInput

    */
    inline int SetDisplayInput(const QString& mode);

    /*
    Method SetEnumWindowDelay

    method SetEnumWindowDelay

    */
    inline int SetEnumWindowDelay(int delay);

    /*
    Method SetEnv

    method SetEnv

    */
    inline int SetEnv(int index, const QString& name, const QString& value);

    /*
    Method SetExactOcr

    method SetExactOcr

    */
    inline int SetExactOcr(int exact_ocr);

    /*
    Method SetExportDict

    method SetExportDict

    */
    inline int SetExportDict(int index, const QString& dict_name);

    /*
    Method SetKeypadDelay

    method SetKeypadDelay

    */
    inline int SetKeypadDelay(const QString& type, int delay);

    /*
    Method SetMemoryFindResultToFile

    method SetMemoryFindResultToFile

    */
    inline int SetMemoryFindResultToFile(const QString& file);

    /*
    Method SetMemoryHwndAsProcessId

    method SetMemoryHwndAsProcessId

    */
    inline int SetMemoryHwndAsProcessId(int en);

    /*
    Method SetMinColGap

    method SetMinColGap

    */
    inline int SetMinColGap(int col_gap);

    /*
    Method SetMinRowGap

    method SetMinRowGap

    */
    inline int SetMinRowGap(int row_gap);

    /*
    Method SetMouseDelay

    method SetMouseDelay

    */
    inline int SetMouseDelay(const QString& type, int delay);

    /*
    Method SetPath

    method SetPath

    */
    inline int SetPath(const QString& path);

    /*
    Method SetPicPwd

    method SetPicPwd

    */
    inline int SetPicPwd(const QString& pwd);

    /*
    Method SetRowGapNoDict

    method SetRowGapNoDict

    */
    inline int SetRowGapNoDict(int row_gap);

    /*
    Method SetScreen

    method SetScreen

    */
    inline int SetScreen(int width, int height, int depth);

    /*
    Method SetShowErrorMsg

    method SetShowErrorMsg

    */
    inline int SetShowErrorMsg(int show);

    /*
    Method SetSimMode

    method SetSimMode

    */
    inline int SetSimMode(int mode);

    /*
    Method SetUAC

    method SetUAC

    */
    inline int SetUAC(int uac);

    /*
    Method SetWindowSize

    method SetWindowSize

    */
    inline int SetWindowSize(int hwnd, int width, int height);

    /*
    Method SetWindowState

    method SetWindowState

    */
    inline int SetWindowState(int hwnd, int flag);

    /*
    Method SetWindowText

    method SetWindowText

    */
    inline int SetWindowText(int hwnd, const QString& text);

    /*
    Method SetWindowTransparent

    method SetWindowTransparent

    */
    inline int SetWindowTransparent(int hwnd, int v);

    /*
    Method SetWordGap

    method SetWordGap

    */
    inline int SetWordGap(int word_gap);

    /*
    Method SetWordGapNoDict

    method SetWordGapNoDict

    */
    inline int SetWordGapNoDict(int word_gap);

    /*
    Method SetWordLineHeight

    method SetWordLineHeight

    */
    inline int SetWordLineHeight(int line_height);

    /*
    Method SetWordLineHeightNoDict

    method SetWordLineHeightNoDict

    */
    inline int SetWordLineHeightNoDict(int line_height);

    /*
    Method ShowScrMsg

    method ShowScrMsg

    */
    inline int ShowScrMsg(int x1, int y1, int x2, int y2, const QString& msg, const QString& color);

    /*
    Method SortPosDistance

    method SortPosDistance

    */
    inline QString SortPosDistance(const QString& all_pos, int type, int x, int y);

    /*
    Method Stop

    method Stop

    */
    inline int Stop(int id);

    /*
    Method StrStr

    method StrStr

    */
    inline int StrStr(const QString& s, const QString& str);

    /*
    Method StringToData

    method StringToData

    */
    inline QString StringToData(const QString& string_value, int type);

    /*
    Method UnBindWindow

    method UnBindWindow

    */
    inline int UnBindWindow();

    /*
    Method UseDict

    method UseDict

    */
    inline int UseDict(int index);

    /*
    Method Ver

    method Ver

    */
    inline QString Ver();

    /*
    Method WaitKey

    method WaitKey

    */
    inline int WaitKey(int key_code, int time_out);

    /*
    Method WheelDown

    method WheelDown

    */
    inline int WheelDown();

    /*
    Method WheelUp

    method WheelUp

    */
    inline int WheelUp();

    /*
    Method WriteData

    method WriteData

    */
    inline int WriteData(int hwnd, const QString& addr, const QString& data);

    /*
    Method WriteDouble

    method WriteDouble

    */
    inline int WriteDouble(int hwnd, const QString& addr, double v);

    /*
    Method WriteFile

    method WriteFile

    */
    inline int WriteFile(const QString& file, const QString& content);

    /*
    Method WriteFloat

    method WriteFloat

    */
    inline int WriteFloat(int hwnd, const QString& addr, double v);

    /*
    Method WriteIni

    method WriteIni

    */
    inline int WriteIni(const QString& section, const QString& key, const QString& v, const QString& file);

    /*
    Method WriteIniPwd

    method WriteIniPwd

    */
    inline int WriteIniPwd(const QString& section, const QString& key, const QString& v, const QString& file, const QString& pwd);

    /*
    Method WriteInt

    method WriteInt

    */
    inline int WriteInt(int hwnd, const QString& addr, int type, int v);

    /*
    Method WriteString

    method WriteString

    */
    inline int WriteString(int hwnd, const QString& addr, int type, const QString& v);

    /*
    Method delay

    method Delay

    */
    inline int delay(int mis);

// meta object functions
    static const QMetaObject staticMetaObject;
    const QMetaObject *metaObject() const override { return &staticMetaObject; }
    void *qt_metacast(const char *) override;
};

// member function implementation
#ifndef QAX_DUMPCPP_DM_NOINLINES
inline int dmsoft::ActiveInputMethod(int hwnd, const QString& id)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int dmsoft::AddDict(int index, const QString& dict_info)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index, (void*)&dict_info};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline QString dmsoft::AppendPicAddr(const QString& pic_info, int addr, int size)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pic_info, (void*)&addr, (void*)&size};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int dmsoft::AsmAdd(const QString& asm_ins)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&asm_ins};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int dmsoft::AsmCall(int hwnd, int mode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int dmsoft::AsmClear()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline QString dmsoft::AsmCode(int base_addr)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&base_addr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline QString dmsoft::Assemble(const QString& asm_code, int base_addr, int is_upper)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&asm_code, (void*)&base_addr, (void*)&is_upper};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline QString dmsoft::BGR2RGB(const QString& bgr_color)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bgr_color};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int dmsoft::Beep(int fre, int delay)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&fre, (void*)&delay};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int dmsoft::BindWindow(int hwnd, const QString& display, const QString& mouse, const QString& keypad, int mode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&display, (void*)&mouse, (void*)&keypad, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int dmsoft::BindWindowEx(int hwnd, const QString& display, const QString& mouse, const QString& keypad, const QString& public_desc, int mode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&display, (void*)&mouse, (void*)&keypad, (void*)&public_desc, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int dmsoft::Capture(int x1, int y1, int x2, int y2, const QString& file)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int dmsoft::CaptureGif(int x1, int y1, int x2, int y2, const QString& file, int delay, int time)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&file, (void*)&delay, (void*)&time};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline int dmsoft::CaptureJpg(int x1, int y1, int x2, int y2, const QString& file, int quality)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&file, (void*)&quality};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline int dmsoft::CapturePng(int x1, int y1, int x2, int y2, const QString& file)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline int dmsoft::CapturePre(const QString& file)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline int dmsoft::CheckFontSmooth()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline int dmsoft::CheckInputMethod(int hwnd, const QString& id)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline int dmsoft::CheckUAC()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline int dmsoft::ClearDict(int index)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
    return qax_result;
}

inline int dmsoft::ClientToScreen(int hwnd, QVariant& x, QVariant& y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline int dmsoft::CmpColor(int x, int y, const QString& color, double sim)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x, (void*)&y, (void*)&color, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
    return qax_result;
}

inline int dmsoft::CopyFile(const QString& src_file, const QString& dst_file, int over)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&src_file, (void*)&dst_file, (void*)&over};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
    return qax_result;
}

inline int dmsoft::CreateFolder(const QString& folder_name)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&folder_name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
    return qax_result;
}

inline int dmsoft::CreateFoobarCustom(int hwnd, int x, int y, const QString& pic, const QString& trans_color, double sim)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x, (void*)&y, (void*)&pic, (void*)&trans_color, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
    return qax_result;
}

inline int dmsoft::CreateFoobarEllipse(int hwnd, int x, int y, int w, int h)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x, (void*)&y, (void*)&w, (void*)&h};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
    return qax_result;
}

inline int dmsoft::CreateFoobarRect(int hwnd, int x, int y, int w, int h)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x, (void*)&y, (void*)&w, (void*)&h};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline int dmsoft::CreateFoobarRoundRect(int hwnd, int x, int y, int w, int h, int rw, int rh)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x, (void*)&y, (void*)&w, (void*)&h, (void*)&rw, (void*)&rh};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline int dmsoft::DecodeFile(const QString& file, const QString& pwd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&file, (void*)&pwd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline int dmsoft::DelEnv(int index, const QString& name)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index, (void*)&name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline int dmsoft::DeleteFile(const QString& file)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline int dmsoft::DeleteFolder(const QString& folder_name)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&folder_name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline int dmsoft::DeleteIni(const QString& section, const QString& key, const QString& file)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&section, (void*)&key, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline int dmsoft::DeleteIniPwd(const QString& section, const QString& key, const QString& file, const QString& pwd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&section, (void*)&key, (void*)&file, (void*)&pwd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline int dmsoft::DisableFontSmooth()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
    return qax_result;
}

inline int dmsoft::DisablePowerSave()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
    return qax_result;
}

inline int dmsoft::DisableScreenSave()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
    return qax_result;
}

inline int dmsoft::DmGuard(int en, const QString& type)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&en, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
    return qax_result;
}

inline QString dmsoft::DoubleToData(double double_value)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&double_value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
    return qax_result;
}

inline int dmsoft::DownCpu(int rate)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&rate};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
    return qax_result;
}

inline int dmsoft::DownloadFile(const QString& url, const QString& save_file, int timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&url, (void*)&save_file, (void*)&timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
    return qax_result;
}

inline int dmsoft::EnableBind(int en)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&en};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
    return qax_result;
}

inline int dmsoft::EnableDisplayDebug(int enable_debug)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&enable_debug};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
    return qax_result;
}

inline int dmsoft::EnableFakeActive(int en)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&en};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
    return qax_result;
}

inline int dmsoft::EnableGetColorByCapture(int en)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&en};
    qt_metacall(QMetaObject::InvokeMetaMethod, 53, _a);
    return qax_result;
}

inline int dmsoft::EnableIme(int en)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&en};
    qt_metacall(QMetaObject::InvokeMetaMethod, 54, _a);
    return qax_result;
}

inline int dmsoft::EnableKeypadMsg(int en)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&en};
    qt_metacall(QMetaObject::InvokeMetaMethod, 55, _a);
    return qax_result;
}

inline int dmsoft::EnableKeypadPatch(int en)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&en};
    qt_metacall(QMetaObject::InvokeMetaMethod, 56, _a);
    return qax_result;
}

inline int dmsoft::EnableKeypadSync(int en, int time_out)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&en, (void*)&time_out};
    qt_metacall(QMetaObject::InvokeMetaMethod, 57, _a);
    return qax_result;
}

inline int dmsoft::EnableMouseMsg(int en)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&en};
    qt_metacall(QMetaObject::InvokeMetaMethod, 58, _a);
    return qax_result;
}

inline int dmsoft::EnableMouseSync(int en, int time_out)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&en, (void*)&time_out};
    qt_metacall(QMetaObject::InvokeMetaMethod, 59, _a);
    return qax_result;
}

inline int dmsoft::EnableRealKeypad(int en)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&en};
    qt_metacall(QMetaObject::InvokeMetaMethod, 60, _a);
    return qax_result;
}

inline int dmsoft::EnableRealMouse(int en, int mousedelay, int mousestep)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&en, (void*)&mousedelay, (void*)&mousestep};
    qt_metacall(QMetaObject::InvokeMetaMethod, 61, _a);
    return qax_result;
}

inline int dmsoft::EnableSpeedDx(int en)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&en};
    qt_metacall(QMetaObject::InvokeMetaMethod, 62, _a);
    return qax_result;
}

inline int dmsoft::EncodeFile(const QString& file, const QString& pwd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&file, (void*)&pwd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 63, _a);
    return qax_result;
}

inline int dmsoft::EnterCri()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 64, _a);
    return qax_result;
}

inline QString dmsoft::EnumWindow(int parent, const QString& title, const QString& class_name, int filter)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&parent, (void*)&title, (void*)&class_name, (void*)&filter};
    qt_metacall(QMetaObject::InvokeMetaMethod, 65, _a);
    return qax_result;
}

inline QString dmsoft::EnumWindowByProcess(const QString& process_name, const QString& title, const QString& class_name, int filter)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&process_name, (void*)&title, (void*)&class_name, (void*)&filter};
    qt_metacall(QMetaObject::InvokeMetaMethod, 66, _a);
    return qax_result;
}

inline QString dmsoft::EnumWindowSuper(const QString& spec1, int flag1, int type1, const QString& spec2, int flag2, int type2, int sort)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&spec1, (void*)&flag1, (void*)&type1, (void*)&spec2, (void*)&flag2, (void*)&type2, (void*)&sort};
    qt_metacall(QMetaObject::InvokeMetaMethod, 67, _a);
    return qax_result;
}

inline QString dmsoft::ExcludePos(const QString& all_pos, int type, int x1, int y1, int x2, int y2)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&all_pos, (void*)&type, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2};
    qt_metacall(QMetaObject::InvokeMetaMethod, 68, _a);
    return qax_result;
}

inline int dmsoft::ExitOs(int type)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 69, _a);
    return qax_result;
}

inline int dmsoft::FaqCancel()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 70, _a);
    return qax_result;
}

inline int dmsoft::FaqCapture(int x1, int y1, int x2, int y2, int quality, int delay, int time)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&quality, (void*)&delay, (void*)&time};
    qt_metacall(QMetaObject::InvokeMetaMethod, 71, _a);
    return qax_result;
}

inline int dmsoft::FaqCaptureFromFile(int x1, int y1, int x2, int y2, const QString& file, int quality)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&file, (void*)&quality};
    qt_metacall(QMetaObject::InvokeMetaMethod, 72, _a);
    return qax_result;
}

inline QString dmsoft::FaqFetch()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 73, _a);
    return qax_result;
}

inline int dmsoft::FaqGetSize(int handle)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&handle};
    qt_metacall(QMetaObject::InvokeMetaMethod, 74, _a);
    return qax_result;
}

inline int dmsoft::FaqPost(const QString& server, int handle, int request_type, int time_out)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&server, (void*)&handle, (void*)&request_type, (void*)&time_out};
    qt_metacall(QMetaObject::InvokeMetaMethod, 75, _a);
    return qax_result;
}

inline int dmsoft::FaqRelease(int handle)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&handle};
    qt_metacall(QMetaObject::InvokeMetaMethod, 76, _a);
    return qax_result;
}

inline QString dmsoft::FaqSend(const QString& server, int handle, int request_type, int time_out)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&server, (void*)&handle, (void*)&request_type, (void*)&time_out};
    qt_metacall(QMetaObject::InvokeMetaMethod, 77, _a);
    return qax_result;
}

inline QString dmsoft::FetchWord(int x1, int y1, int x2, int y2, const QString& color, const QString& word)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&color, (void*)&word};
    qt_metacall(QMetaObject::InvokeMetaMethod, 78, _a);
    return qax_result;
}

inline int dmsoft::FindColor(int x1, int y1, int x2, int y2, const QString& color, double sim, int dir, QVariant& x, QVariant& y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&color, (void*)&sim, (void*)&dir, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 79, _a);
    return qax_result;
}

inline QString dmsoft::FindColorE(int x1, int y1, int x2, int y2, const QString& color, double sim, int dir)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&color, (void*)&sim, (void*)&dir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 80, _a);
    return qax_result;
}

inline QString dmsoft::FindColorEx(int x1, int y1, int x2, int y2, const QString& color, double sim, int dir)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&color, (void*)&sim, (void*)&dir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 81, _a);
    return qax_result;
}

inline QString dmsoft::FindData(int hwnd, const QString& addr_range, const QString& data)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 82, _a);
    return qax_result;
}

inline QString dmsoft::FindDataEx(int hwnd, const QString& addr_range, const QString& data, int step, int multi_thread, int mode)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&data, (void*)&step, (void*)&multi_thread, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 83, _a);
    return qax_result;
}

inline QString dmsoft::FindDouble(int hwnd, const QString& addr_range, double double_value_min, double double_value_max)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&double_value_min, (void*)&double_value_max};
    qt_metacall(QMetaObject::InvokeMetaMethod, 84, _a);
    return qax_result;
}

inline QString dmsoft::FindDoubleEx(int hwnd, const QString& addr_range, double double_value_min, double double_value_max, int step, int multi_thread, int mode)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&double_value_min, (void*)&double_value_max, (void*)&step, (void*)&multi_thread, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 85, _a);
    return qax_result;
}

inline QString dmsoft::FindFloat(int hwnd, const QString& addr_range, double float_value_min, double float_value_max)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&float_value_min, (void*)&float_value_max};
    qt_metacall(QMetaObject::InvokeMetaMethod, 86, _a);
    return qax_result;
}

inline QString dmsoft::FindFloatEx(int hwnd, const QString& addr_range, double float_value_min, double float_value_max, int step, int multi_thread, int mode)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&float_value_min, (void*)&float_value_max, (void*)&step, (void*)&multi_thread, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 87, _a);
    return qax_result;
}

inline int dmsoft::FindInputMethod(const QString& id)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 88, _a);
    return qax_result;
}

inline QString dmsoft::FindInt(int hwnd, const QString& addr_range, int int_value_min, int int_value_max, int type)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&int_value_min, (void*)&int_value_max, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 89, _a);
    return qax_result;
}

inline QString dmsoft::FindIntEx(int hwnd, const QString& addr_range, int int_value_min, int int_value_max, int type, int step, int multi_thread, int mode)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&int_value_min, (void*)&int_value_max, (void*)&type, (void*)&step, (void*)&multi_thread, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 90, _a);
    return qax_result;
}

inline int dmsoft::FindMulColor(int x1, int y1, int x2, int y2, const QString& color, double sim)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&color, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 91, _a);
    return qax_result;
}

inline int dmsoft::FindMultiColor(int x1, int y1, int x2, int y2, const QString& first_color, const QString& offset_color, double sim, int dir, QVariant& x, QVariant& y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&first_color, (void*)&offset_color, (void*)&sim, (void*)&dir, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 92, _a);
    return qax_result;
}

inline QString dmsoft::FindMultiColorE(int x1, int y1, int x2, int y2, const QString& first_color, const QString& offset_color, double sim, int dir)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&first_color, (void*)&offset_color, (void*)&sim, (void*)&dir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 93, _a);
    return qax_result;
}

inline QString dmsoft::FindMultiColorEx(int x1, int y1, int x2, int y2, const QString& first_color, const QString& offset_color, double sim, int dir)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&first_color, (void*)&offset_color, (void*)&sim, (void*)&dir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 94, _a);
    return qax_result;
}

inline QString dmsoft::FindNearestPos(const QString& all_pos, int type, int x, int y)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&all_pos, (void*)&type, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 95, _a);
    return qax_result;
}

inline int dmsoft::FindPic(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir, QVariant& x, QVariant& y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&pic_name, (void*)&delta_color, (void*)&sim, (void*)&dir, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 96, _a);
    return qax_result;
}

inline QString dmsoft::FindPicE(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&pic_name, (void*)&delta_color, (void*)&sim, (void*)&dir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 97, _a);
    return qax_result;
}

inline QString dmsoft::FindPicEx(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&pic_name, (void*)&delta_color, (void*)&sim, (void*)&dir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 98, _a);
    return qax_result;
}

inline QString dmsoft::FindPicExS(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&pic_name, (void*)&delta_color, (void*)&sim, (void*)&dir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 99, _a);
    return qax_result;
}

inline int dmsoft::FindPicMem(int x1, int y1, int x2, int y2, const QString& pic_info, const QString& delta_color, double sim, int dir, QVariant& x, QVariant& y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&pic_info, (void*)&delta_color, (void*)&sim, (void*)&dir, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 100, _a);
    return qax_result;
}

inline QString dmsoft::FindPicMemE(int x1, int y1, int x2, int y2, const QString& pic_info, const QString& delta_color, double sim, int dir)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&pic_info, (void*)&delta_color, (void*)&sim, (void*)&dir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 101, _a);
    return qax_result;
}

inline QString dmsoft::FindPicMemEx(int x1, int y1, int x2, int y2, const QString& pic_info, const QString& delta_color, double sim, int dir)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&pic_info, (void*)&delta_color, (void*)&sim, (void*)&dir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 102, _a);
    return qax_result;
}

inline QString dmsoft::FindPicS(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir, QVariant& x, QVariant& y)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&pic_name, (void*)&delta_color, (void*)&sim, (void*)&dir, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 103, _a);
    return qax_result;
}

inline int dmsoft::FindShape(int x1, int y1, int x2, int y2, const QString& offset_color, double sim, int dir, QVariant& x, QVariant& y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&offset_color, (void*)&sim, (void*)&dir, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 104, _a);
    return qax_result;
}

inline QString dmsoft::FindShapeE(int x1, int y1, int x2, int y2, const QString& offset_color, double sim, int dir)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&offset_color, (void*)&sim, (void*)&dir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 105, _a);
    return qax_result;
}

inline QString dmsoft::FindShapeEx(int x1, int y1, int x2, int y2, const QString& offset_color, double sim, int dir)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&offset_color, (void*)&sim, (void*)&dir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 106, _a);
    return qax_result;
}

inline int dmsoft::FindStr(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim, QVariant& x, QVariant& y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&str, (void*)&color, (void*)&sim, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 107, _a);
    return qax_result;
}

inline QString dmsoft::FindStrE(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&str, (void*)&color, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 108, _a);
    return qax_result;
}

inline QString dmsoft::FindStrEx(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&str, (void*)&color, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 109, _a);
    return qax_result;
}

inline QString dmsoft::FindStrExS(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&str, (void*)&color, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 110, _a);
    return qax_result;
}

inline int dmsoft::FindStrFast(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim, QVariant& x, QVariant& y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&str, (void*)&color, (void*)&sim, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 111, _a);
    return qax_result;
}

inline QString dmsoft::FindStrFastE(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&str, (void*)&color, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 112, _a);
    return qax_result;
}

inline QString dmsoft::FindStrFastEx(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&str, (void*)&color, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 113, _a);
    return qax_result;
}

inline QString dmsoft::FindStrFastExS(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&str, (void*)&color, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 114, _a);
    return qax_result;
}

inline QString dmsoft::FindStrFastS(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim, QVariant& x, QVariant& y)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&str, (void*)&color, (void*)&sim, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 115, _a);
    return qax_result;
}

inline QString dmsoft::FindStrS(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim, QVariant& x, QVariant& y)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&str, (void*)&color, (void*)&sim, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 116, _a);
    return qax_result;
}

inline int dmsoft::FindStrWithFont(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim, const QString& font_name, int font_size, int flag, QVariant& x, QVariant& y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&str, (void*)&color, (void*)&sim, (void*)&font_name, (void*)&font_size, (void*)&flag, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 117, _a);
    return qax_result;
}

inline QString dmsoft::FindStrWithFontE(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim, const QString& font_name, int font_size, int flag)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&str, (void*)&color, (void*)&sim, (void*)&font_name, (void*)&font_size, (void*)&flag};
    qt_metacall(QMetaObject::InvokeMetaMethod, 118, _a);
    return qax_result;
}

inline QString dmsoft::FindStrWithFontEx(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim, const QString& font_name, int font_size, int flag)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&str, (void*)&color, (void*)&sim, (void*)&font_name, (void*)&font_size, (void*)&flag};
    qt_metacall(QMetaObject::InvokeMetaMethod, 119, _a);
    return qax_result;
}

inline QString dmsoft::FindString(int hwnd, const QString& addr_range, const QString& string_value, int type)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&string_value, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 120, _a);
    return qax_result;
}

inline QString dmsoft::FindStringEx(int hwnd, const QString& addr_range, const QString& string_value, int type, int step, int multi_thread, int mode)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&string_value, (void*)&type, (void*)&step, (void*)&multi_thread, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 121, _a);
    return qax_result;
}

inline int dmsoft::FindWindow(const QString& class_name, const QString& title_name)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&class_name, (void*)&title_name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 122, _a);
    return qax_result;
}

inline int dmsoft::FindWindowByProcess(const QString& process_name, const QString& class_name, const QString& title_name)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&process_name, (void*)&class_name, (void*)&title_name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 123, _a);
    return qax_result;
}

inline int dmsoft::FindWindowByProcessId(int process_id, const QString& class_name, const QString& title_name)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&process_id, (void*)&class_name, (void*)&title_name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 124, _a);
    return qax_result;
}

inline int dmsoft::FindWindowEx(int parent, const QString& class_name, const QString& title_name)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&parent, (void*)&class_name, (void*)&title_name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 125, _a);
    return qax_result;
}

inline int dmsoft::FindWindowSuper(const QString& spec1, int flag1, int type1, const QString& spec2, int flag2, int type2)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&spec1, (void*)&flag1, (void*)&type1, (void*)&spec2, (void*)&flag2, (void*)&type2};
    qt_metacall(QMetaObject::InvokeMetaMethod, 126, _a);
    return qax_result;
}

inline QString dmsoft::FloatToData(double float_value)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&float_value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 127, _a);
    return qax_result;
}

inline int dmsoft::FoobarClearText(int hwnd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 128, _a);
    return qax_result;
}

inline int dmsoft::FoobarClose(int hwnd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 129, _a);
    return qax_result;
}

inline int dmsoft::FoobarDrawLine(int hwnd, int x1, int y1, int x2, int y2, const QString& color, int style, int width)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&color, (void*)&style, (void*)&width};
    qt_metacall(QMetaObject::InvokeMetaMethod, 130, _a);
    return qax_result;
}

inline int dmsoft::FoobarDrawPic(int hwnd, int x, int y, const QString& pic, const QString& trans_color)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x, (void*)&y, (void*)&pic, (void*)&trans_color};
    qt_metacall(QMetaObject::InvokeMetaMethod, 131, _a);
    return qax_result;
}

inline int dmsoft::FoobarDrawText(int hwnd, int x, int y, int w, int h, const QString& text, const QString& color, int align)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x, (void*)&y, (void*)&w, (void*)&h, (void*)&text, (void*)&color, (void*)&align};
    qt_metacall(QMetaObject::InvokeMetaMethod, 132, _a);
    return qax_result;
}

inline int dmsoft::FoobarFillRect(int hwnd, int x1, int y1, int x2, int y2, const QString& color)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&color};
    qt_metacall(QMetaObject::InvokeMetaMethod, 133, _a);
    return qax_result;
}

inline int dmsoft::FoobarLock(int hwnd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 134, _a);
    return qax_result;
}

inline int dmsoft::FoobarPrintText(int hwnd, const QString& text, const QString& color)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&text, (void*)&color};
    qt_metacall(QMetaObject::InvokeMetaMethod, 135, _a);
    return qax_result;
}

inline int dmsoft::FoobarSetFont(int hwnd, const QString& font_name, int size, int flag)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&font_name, (void*)&size, (void*)&flag};
    qt_metacall(QMetaObject::InvokeMetaMethod, 136, _a);
    return qax_result;
}

inline int dmsoft::FoobarSetSave(int hwnd, const QString& file, int en, const QString& header)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&file, (void*)&en, (void*)&header};
    qt_metacall(QMetaObject::InvokeMetaMethod, 137, _a);
    return qax_result;
}

inline int dmsoft::FoobarTextLineGap(int hwnd, int gap)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&gap};
    qt_metacall(QMetaObject::InvokeMetaMethod, 138, _a);
    return qax_result;
}

inline int dmsoft::FoobarTextPrintDir(int hwnd, int dir)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&dir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 139, _a);
    return qax_result;
}

inline int dmsoft::FoobarTextRect(int hwnd, int x, int y, int w, int h)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x, (void*)&y, (void*)&w, (void*)&h};
    qt_metacall(QMetaObject::InvokeMetaMethod, 140, _a);
    return qax_result;
}

inline int dmsoft::FoobarUnlock(int hwnd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 141, _a);
    return qax_result;
}

inline int dmsoft::FoobarUpdate(int hwnd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 142, _a);
    return qax_result;
}

inline int dmsoft::ForceUnBindWindow(int hwnd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 143, _a);
    return qax_result;
}

inline int dmsoft::FreePic(const QString& pic_name)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pic_name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 144, _a);
    return qax_result;
}

inline int dmsoft::FreeScreenData(int handle)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&handle};
    qt_metacall(QMetaObject::InvokeMetaMethod, 145, _a);
    return qax_result;
}

inline QString dmsoft::GetAveHSV(int x1, int y1, int x2, int y2)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2};
    qt_metacall(QMetaObject::InvokeMetaMethod, 146, _a);
    return qax_result;
}

inline QString dmsoft::GetAveRGB(int x1, int y1, int x2, int y2)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2};
    qt_metacall(QMetaObject::InvokeMetaMethod, 147, _a);
    return qax_result;
}

inline QString dmsoft::GetBasePath()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 148, _a);
    return qax_result;
}

inline int dmsoft::GetClientRect(int hwnd, QVariant& x1, QVariant& y1, QVariant& x2, QVariant& y2)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2};
    qt_metacall(QMetaObject::InvokeMetaMethod, 149, _a);
    return qax_result;
}

inline int dmsoft::GetClientSize(int hwnd, QVariant& width, QVariant& height)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&width, (void*)&height};
    qt_metacall(QMetaObject::InvokeMetaMethod, 150, _a);
    return qax_result;
}

inline QString dmsoft::GetClipboard()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 151, _a);
    return qax_result;
}

inline QString dmsoft::GetColor(int x, int y)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 152, _a);
    return qax_result;
}

inline QString dmsoft::GetColorBGR(int x, int y)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 153, _a);
    return qax_result;
}

inline QString dmsoft::GetColorHSV(int x, int y)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 154, _a);
    return qax_result;
}

inline int dmsoft::GetColorNum(int x1, int y1, int x2, int y2, const QString& color, double sim)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&color, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 155, _a);
    return qax_result;
}

inline int dmsoft::GetCursorPos(QVariant& x, QVariant& y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 156, _a);
    return qax_result;
}

inline QString dmsoft::GetCursorShape()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 157, _a);
    return qax_result;
}

inline QString dmsoft::GetCursorShapeEx(int type)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 158, _a);
    return qax_result;
}

inline QString dmsoft::GetCursorSpot()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 159, _a);
    return qax_result;
}

inline QString dmsoft::GetDict(int index, int font_index)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index, (void*)&font_index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 160, _a);
    return qax_result;
}

inline int dmsoft::GetDictCount(int index)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 161, _a);
    return qax_result;
}

inline QString dmsoft::GetDictInfo(const QString& str, const QString& font_name, int font_size, int flag)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&str, (void*)&font_name, (void*)&font_size, (void*)&flag};
    qt_metacall(QMetaObject::InvokeMetaMethod, 162, _a);
    return qax_result;
}

inline QString dmsoft::GetDir(int type)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 163, _a);
    return qax_result;
}

inline QString dmsoft::GetDiskSerial()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 164, _a);
    return qax_result;
}

inline int dmsoft::GetDmCount()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 165, _a);
    return qax_result;
}

inline QString dmsoft::GetEnv(int index, const QString& name)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index, (void*)&name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 166, _a);
    return qax_result;
}

inline int dmsoft::GetFileLength(const QString& file)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 167, _a);
    return qax_result;
}

inline int dmsoft::GetForegroundFocus()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 168, _a);
    return qax_result;
}

inline int dmsoft::GetForegroundWindow()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 169, _a);
    return qax_result;
}

inline int dmsoft::GetID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 170, _a);
    return qax_result;
}

inline int dmsoft::GetKeyState(int vk)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&vk};
    qt_metacall(QMetaObject::InvokeMetaMethod, 171, _a);
    return qax_result;
}

inline int dmsoft::GetLastError()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 172, _a);
    return qax_result;
}

inline QString dmsoft::GetMac()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 173, _a);
    return qax_result;
}

inline QString dmsoft::GetMachineCode()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 174, _a);
    return qax_result;
}

inline QString dmsoft::GetMachineCodeNoMac()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 175, _a);
    return qax_result;
}

inline int dmsoft::GetModuleBaseAddr(int hwnd, const QString& module_name)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&module_name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 176, _a);
    return qax_result;
}

inline int dmsoft::GetMousePointWindow()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 177, _a);
    return qax_result;
}

inline QString dmsoft::GetNetTime()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 178, _a);
    return qax_result;
}

inline QString dmsoft::GetNetTimeSafe()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 179, _a);
    return qax_result;
}

inline int dmsoft::GetNowDict()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 180, _a);
    return qax_result;
}

inline int dmsoft::GetOsType()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 181, _a);
    return qax_result;
}

inline QString dmsoft::GetPath()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 182, _a);
    return qax_result;
}

inline QString dmsoft::GetPicSize(const QString& pic_name)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pic_name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 183, _a);
    return qax_result;
}

inline int dmsoft::GetPointWindow(int x, int y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 184, _a);
    return qax_result;
}

inline int dmsoft::GetResultCount(const QString& str)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&str};
    qt_metacall(QMetaObject::InvokeMetaMethod, 185, _a);
    return qax_result;
}

inline int dmsoft::GetResultPos(const QString& str, int index, QVariant& x, QVariant& y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&str, (void*)&index, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 186, _a);
    return qax_result;
}

inline int dmsoft::GetScreenData(int x1, int y1, int x2, int y2)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2};
    qt_metacall(QMetaObject::InvokeMetaMethod, 187, _a);
    return qax_result;
}

inline int dmsoft::GetScreenDataBmp(int x1, int y1, int x2, int y2, QVariant& data, QVariant& size)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&data, (void*)&size};
    qt_metacall(QMetaObject::InvokeMetaMethod, 188, _a);
    return qax_result;
}

inline int dmsoft::GetScreenDepth()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 189, _a);
    return qax_result;
}

inline int dmsoft::GetScreenHeight()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 190, _a);
    return qax_result;
}

inline int dmsoft::GetScreenWidth()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 191, _a);
    return qax_result;
}

inline int dmsoft::GetSpecialWindow(int flag)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&flag};
    qt_metacall(QMetaObject::InvokeMetaMethod, 192, _a);
    return qax_result;
}

inline int dmsoft::GetTime()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 193, _a);
    return qax_result;
}

inline int dmsoft::GetWindow(int hwnd, int flag)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&flag};
    qt_metacall(QMetaObject::InvokeMetaMethod, 194, _a);
    return qax_result;
}

inline QString dmsoft::GetWindowClass(int hwnd)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 195, _a);
    return qax_result;
}

inline int dmsoft::GetWindowProcessId(int hwnd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 196, _a);
    return qax_result;
}

inline QString dmsoft::GetWindowProcessPath(int hwnd)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 197, _a);
    return qax_result;
}

inline int dmsoft::GetWindowRect(int hwnd, QVariant& x1, QVariant& y1, QVariant& x2, QVariant& y2)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2};
    qt_metacall(QMetaObject::InvokeMetaMethod, 198, _a);
    return qax_result;
}

inline int dmsoft::GetWindowState(int hwnd, int flag)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&flag};
    qt_metacall(QMetaObject::InvokeMetaMethod, 199, _a);
    return qax_result;
}

inline QString dmsoft::GetWindowTitle(int hwnd)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 200, _a);
    return qax_result;
}

inline int dmsoft::GetWordResultCount(const QString& str)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&str};
    qt_metacall(QMetaObject::InvokeMetaMethod, 201, _a);
    return qax_result;
}

inline int dmsoft::GetWordResultPos(const QString& str, int index, QVariant& x, QVariant& y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&str, (void*)&index, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 202, _a);
    return qax_result;
}

inline QString dmsoft::GetWordResultStr(const QString& str, int index)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&str, (void*)&index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 203, _a);
    return qax_result;
}

inline QString dmsoft::GetWords(int x1, int y1, int x2, int y2, const QString& color, double sim)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&color, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 204, _a);
    return qax_result;
}

inline QString dmsoft::GetWordsNoDict(int x1, int y1, int x2, int y2, const QString& color)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&color};
    qt_metacall(QMetaObject::InvokeMetaMethod, 205, _a);
    return qax_result;
}

inline int dmsoft::ImageToBmp(const QString& pic_name, const QString& bmp_name)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pic_name, (void*)&bmp_name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 206, _a);
    return qax_result;
}

inline QString dmsoft::IntToData(int int_value, int type)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&int_value, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 207, _a);
    return qax_result;
}

inline int dmsoft::Is64Bit()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 208, _a);
    return qax_result;
}

inline int dmsoft::IsBind(int hwnd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 209, _a);
    return qax_result;
}

inline int dmsoft::IsDisplayDead(int x1, int y1, int x2, int y2, int t)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&t};
    qt_metacall(QMetaObject::InvokeMetaMethod, 210, _a);
    return qax_result;
}

inline int dmsoft::IsFileExist(const QString& file)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 211, _a);
    return qax_result;
}

inline int dmsoft::KeyDown(int vk)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&vk};
    qt_metacall(QMetaObject::InvokeMetaMethod, 212, _a);
    return qax_result;
}

inline int dmsoft::KeyDownChar(const QString& key_str)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&key_str};
    qt_metacall(QMetaObject::InvokeMetaMethod, 213, _a);
    return qax_result;
}

inline int dmsoft::KeyPress(int vk)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&vk};
    qt_metacall(QMetaObject::InvokeMetaMethod, 214, _a);
    return qax_result;
}

inline int dmsoft::KeyPressChar(const QString& key_str)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&key_str};
    qt_metacall(QMetaObject::InvokeMetaMethod, 215, _a);
    return qax_result;
}

inline int dmsoft::KeyPressStr(const QString& key_str, int delay)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&key_str, (void*)&delay};
    qt_metacall(QMetaObject::InvokeMetaMethod, 216, _a);
    return qax_result;
}

inline int dmsoft::KeyUp(int vk)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&vk};
    qt_metacall(QMetaObject::InvokeMetaMethod, 217, _a);
    return qax_result;
}

inline int dmsoft::KeyUpChar(const QString& key_str)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&key_str};
    qt_metacall(QMetaObject::InvokeMetaMethod, 218, _a);
    return qax_result;
}

inline int dmsoft::LeaveCri()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 219, _a);
    return qax_result;
}

inline int dmsoft::LeftClick()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 220, _a);
    return qax_result;
}

inline int dmsoft::LeftDoubleClick()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 221, _a);
    return qax_result;
}

inline int dmsoft::LeftDown()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 222, _a);
    return qax_result;
}

inline int dmsoft::LeftUp()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 223, _a);
    return qax_result;
}

inline int dmsoft::LoadPic(const QString& pic_name)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pic_name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 224, _a);
    return qax_result;
}

inline int dmsoft::LockDisplay(int lock)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lock};
    qt_metacall(QMetaObject::InvokeMetaMethod, 225, _a);
    return qax_result;
}

inline int dmsoft::LockInput(int lock)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lock};
    qt_metacall(QMetaObject::InvokeMetaMethod, 226, _a);
    return qax_result;
}

inline int dmsoft::LockMouseRect(int x1, int y1, int x2, int y2)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2};
    qt_metacall(QMetaObject::InvokeMetaMethod, 227, _a);
    return qax_result;
}

inline int dmsoft::Log(const QString& info)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&info};
    qt_metacall(QMetaObject::InvokeMetaMethod, 228, _a);
    return qax_result;
}

inline QString dmsoft::MatchPicName(const QString& pic_name)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pic_name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 229, _a);
    return qax_result;
}

inline QString dmsoft::Md5(const QString& str)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&str};
    qt_metacall(QMetaObject::InvokeMetaMethod, 230, _a);
    return qax_result;
}

inline int dmsoft::MiddleClick()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 231, _a);
    return qax_result;
}

inline int dmsoft::MoveDD(int dx, int dy)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&dx, (void*)&dy};
    qt_metacall(QMetaObject::InvokeMetaMethod, 232, _a);
    return qax_result;
}

inline int dmsoft::MoveFile(const QString& src_file, const QString& dst_file)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&src_file, (void*)&dst_file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 233, _a);
    return qax_result;
}

inline int dmsoft::MoveR(int rx, int ry)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&rx, (void*)&ry};
    qt_metacall(QMetaObject::InvokeMetaMethod, 234, _a);
    return qax_result;
}

inline int dmsoft::MoveTo(int x, int y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 235, _a);
    return qax_result;
}

inline QString dmsoft::MoveToEx(int x, int y, int w, int h)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x, (void*)&y, (void*)&w, (void*)&h};
    qt_metacall(QMetaObject::InvokeMetaMethod, 236, _a);
    return qax_result;
}

inline int dmsoft::MoveWindow(int hwnd, int x, int y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 237, _a);
    return qax_result;
}

inline QString dmsoft::Ocr(int x1, int y1, int x2, int y2, const QString& color, double sim)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&color, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 238, _a);
    return qax_result;
}

inline QString dmsoft::OcrEx(int x1, int y1, int x2, int y2, const QString& color, double sim)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&color, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 239, _a);
    return qax_result;
}

inline QString dmsoft::OcrInFile(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& color, double sim)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&pic_name, (void*)&color, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 240, _a);
    return qax_result;
}

inline int dmsoft::Play(const QString& file)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 241, _a);
    return qax_result;
}

inline QString dmsoft::RGB2BGR(const QString& rgb_color)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&rgb_color};
    qt_metacall(QMetaObject::InvokeMetaMethod, 242, _a);
    return qax_result;
}

inline QString dmsoft::ReadData(int hwnd, const QString& addr, int len)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&len};
    qt_metacall(QMetaObject::InvokeMetaMethod, 243, _a);
    return qax_result;
}

inline double dmsoft::ReadDouble(int hwnd, const QString& addr)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 244, _a);
    return qax_result;
}

inline QString dmsoft::ReadFile(const QString& file)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 245, _a);
    return qax_result;
}

inline double dmsoft::ReadFloat(int hwnd, const QString& addr)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 246, _a);
    return qax_result;
}

inline QString dmsoft::ReadIni(const QString& section, const QString& key, const QString& file)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&section, (void*)&key, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 247, _a);
    return qax_result;
}

inline QString dmsoft::ReadIniPwd(const QString& section, const QString& key, const QString& file, const QString& pwd)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&section, (void*)&key, (void*)&file, (void*)&pwd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 248, _a);
    return qax_result;
}

inline int dmsoft::ReadInt(int hwnd, const QString& addr, int type)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 249, _a);
    return qax_result;
}

inline QString dmsoft::ReadString(int hwnd, const QString& addr, int type, int len)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&type, (void*)&len};
    qt_metacall(QMetaObject::InvokeMetaMethod, 250, _a);
    return qax_result;
}

inline int dmsoft::Reg(const QString& code, const QString& Ver)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&code, (void*)&Ver};
    qt_metacall(QMetaObject::InvokeMetaMethod, 251, _a);
    return qax_result;
}

inline int dmsoft::RegEx(const QString& code, const QString& Ver, const QString& ip)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&code, (void*)&Ver, (void*)&ip};
    qt_metacall(QMetaObject::InvokeMetaMethod, 252, _a);
    return qax_result;
}

inline int dmsoft::RegExNoMac(const QString& code, const QString& Ver, const QString& ip)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&code, (void*)&Ver, (void*)&ip};
    qt_metacall(QMetaObject::InvokeMetaMethod, 253, _a);
    return qax_result;
}

inline int dmsoft::RegNoMac(const QString& code, const QString& Ver)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&code, (void*)&Ver};
    qt_metacall(QMetaObject::InvokeMetaMethod, 254, _a);
    return qax_result;
}

inline int dmsoft::RightClick()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 255, _a);
    return qax_result;
}

inline int dmsoft::RightDown()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 256, _a);
    return qax_result;
}

inline int dmsoft::RightUp()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 257, _a);
    return qax_result;
}

inline int dmsoft::RunApp(const QString& path, int mode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&path, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 258, _a);
    return qax_result;
}

inline int dmsoft::SaveDict(int index, const QString& file)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 259, _a);
    return qax_result;
}

inline int dmsoft::ScreenToClient(int hwnd, QVariant& x, QVariant& y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 260, _a);
    return qax_result;
}

inline QString dmsoft::SelectDirectory()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 261, _a);
    return qax_result;
}

inline QString dmsoft::SelectFile()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 262, _a);
    return qax_result;
}

inline int dmsoft::SendCommand(const QString& cmd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&cmd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 263, _a);
    return qax_result;
}

inline int dmsoft::SendPaste(int hwnd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 264, _a);
    return qax_result;
}

inline int dmsoft::SendString(int hwnd, const QString& str)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&str};
    qt_metacall(QMetaObject::InvokeMetaMethod, 265, _a);
    return qax_result;
}

inline int dmsoft::SendString2(int hwnd, const QString& str)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&str};
    qt_metacall(QMetaObject::InvokeMetaMethod, 266, _a);
    return qax_result;
}

inline int dmsoft::SendStringIme(const QString& str)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&str};
    qt_metacall(QMetaObject::InvokeMetaMethod, 267, _a);
    return qax_result;
}

inline int dmsoft::SetClientSize(int hwnd, int width, int height)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&width, (void*)&height};
    qt_metacall(QMetaObject::InvokeMetaMethod, 268, _a);
    return qax_result;
}

inline int dmsoft::SetClipboard(const QString& data)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 269, _a);
    return qax_result;
}

inline int dmsoft::SetColGapNoDict(int col_gap)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&col_gap};
    qt_metacall(QMetaObject::InvokeMetaMethod, 270, _a);
    return qax_result;
}

inline int dmsoft::SetDict(int index, const QString& dict_name)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index, (void*)&dict_name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 271, _a);
    return qax_result;
}

inline int dmsoft::SetDictMem(int index, int addr, int size)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index, (void*)&addr, (void*)&size};
    qt_metacall(QMetaObject::InvokeMetaMethod, 272, _a);
    return qax_result;
}

inline int dmsoft::SetDictPwd(const QString& pwd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pwd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 273, _a);
    return qax_result;
}

inline int dmsoft::SetDisplayAcceler(int level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 274, _a);
    return qax_result;
}

inline int dmsoft::SetDisplayDelay(int t)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&t};
    qt_metacall(QMetaObject::InvokeMetaMethod, 275, _a);
    return qax_result;
}

inline int dmsoft::SetDisplayInput(const QString& mode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 276, _a);
    return qax_result;
}

inline int dmsoft::SetEnumWindowDelay(int delay)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&delay};
    qt_metacall(QMetaObject::InvokeMetaMethod, 277, _a);
    return qax_result;
}

inline int dmsoft::SetEnv(int index, const QString& name, const QString& value)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index, (void*)&name, (void*)&value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 278, _a);
    return qax_result;
}

inline int dmsoft::SetExactOcr(int exact_ocr)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&exact_ocr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 279, _a);
    return qax_result;
}

inline int dmsoft::SetExportDict(int index, const QString& dict_name)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index, (void*)&dict_name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 280, _a);
    return qax_result;
}

inline int dmsoft::SetKeypadDelay(const QString& type, int delay)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&type, (void*)&delay};
    qt_metacall(QMetaObject::InvokeMetaMethod, 281, _a);
    return qax_result;
}

inline int dmsoft::SetMemoryFindResultToFile(const QString& file)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 282, _a);
    return qax_result;
}

inline int dmsoft::SetMemoryHwndAsProcessId(int en)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&en};
    qt_metacall(QMetaObject::InvokeMetaMethod, 283, _a);
    return qax_result;
}

inline int dmsoft::SetMinColGap(int col_gap)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&col_gap};
    qt_metacall(QMetaObject::InvokeMetaMethod, 284, _a);
    return qax_result;
}

inline int dmsoft::SetMinRowGap(int row_gap)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&row_gap};
    qt_metacall(QMetaObject::InvokeMetaMethod, 285, _a);
    return qax_result;
}

inline int dmsoft::SetMouseDelay(const QString& type, int delay)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&type, (void*)&delay};
    qt_metacall(QMetaObject::InvokeMetaMethod, 286, _a);
    return qax_result;
}

inline int dmsoft::SetPath(const QString& path)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 287, _a);
    return qax_result;
}

inline int dmsoft::SetPicPwd(const QString& pwd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pwd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 288, _a);
    return qax_result;
}

inline int dmsoft::SetRowGapNoDict(int row_gap)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&row_gap};
    qt_metacall(QMetaObject::InvokeMetaMethod, 289, _a);
    return qax_result;
}

inline int dmsoft::SetScreen(int width, int height, int depth)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&width, (void*)&height, (void*)&depth};
    qt_metacall(QMetaObject::InvokeMetaMethod, 290, _a);
    return qax_result;
}

inline int dmsoft::SetShowErrorMsg(int show)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&show};
    qt_metacall(QMetaObject::InvokeMetaMethod, 291, _a);
    return qax_result;
}

inline int dmsoft::SetSimMode(int mode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 292, _a);
    return qax_result;
}

inline int dmsoft::SetUAC(int uac)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&uac};
    qt_metacall(QMetaObject::InvokeMetaMethod, 293, _a);
    return qax_result;
}

inline int dmsoft::SetWindowSize(int hwnd, int width, int height)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&width, (void*)&height};
    qt_metacall(QMetaObject::InvokeMetaMethod, 294, _a);
    return qax_result;
}

inline int dmsoft::SetWindowState(int hwnd, int flag)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&flag};
    qt_metacall(QMetaObject::InvokeMetaMethod, 295, _a);
    return qax_result;
}

inline int dmsoft::SetWindowText(int hwnd, const QString& text)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&text};
    qt_metacall(QMetaObject::InvokeMetaMethod, 296, _a);
    return qax_result;
}

inline int dmsoft::SetWindowTransparent(int hwnd, int v)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&v};
    qt_metacall(QMetaObject::InvokeMetaMethod, 297, _a);
    return qax_result;
}

inline int dmsoft::SetWordGap(int word_gap)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&word_gap};
    qt_metacall(QMetaObject::InvokeMetaMethod, 298, _a);
    return qax_result;
}

inline int dmsoft::SetWordGapNoDict(int word_gap)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&word_gap};
    qt_metacall(QMetaObject::InvokeMetaMethod, 299, _a);
    return qax_result;
}

inline int dmsoft::SetWordLineHeight(int line_height)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&line_height};
    qt_metacall(QMetaObject::InvokeMetaMethod, 300, _a);
    return qax_result;
}

inline int dmsoft::SetWordLineHeightNoDict(int line_height)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&line_height};
    qt_metacall(QMetaObject::InvokeMetaMethod, 301, _a);
    return qax_result;
}

inline int dmsoft::ShowScrMsg(int x1, int y1, int x2, int y2, const QString& msg, const QString& color)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&msg, (void*)&color};
    qt_metacall(QMetaObject::InvokeMetaMethod, 302, _a);
    return qax_result;
}

inline QString dmsoft::SortPosDistance(const QString& all_pos, int type, int x, int y)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&all_pos, (void*)&type, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 303, _a);
    return qax_result;
}

inline int dmsoft::Stop(int id)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 304, _a);
    return qax_result;
}

inline int dmsoft::StrStr(const QString& s, const QString& str)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&s, (void*)&str};
    qt_metacall(QMetaObject::InvokeMetaMethod, 305, _a);
    return qax_result;
}

inline QString dmsoft::StringToData(const QString& string_value, int type)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&string_value, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 306, _a);
    return qax_result;
}

inline int dmsoft::UnBindWindow()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 307, _a);
    return qax_result;
}

inline int dmsoft::UseDict(int index)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 308, _a);
    return qax_result;
}

inline QString dmsoft::Ver()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 309, _a);
    return qax_result;
}

inline int dmsoft::WaitKey(int key_code, int time_out)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&key_code, (void*)&time_out};
    qt_metacall(QMetaObject::InvokeMetaMethod, 310, _a);
    return qax_result;
}

inline int dmsoft::WheelDown()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 311, _a);
    return qax_result;
}

inline int dmsoft::WheelUp()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 312, _a);
    return qax_result;
}

inline int dmsoft::WriteData(int hwnd, const QString& addr, const QString& data)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 313, _a);
    return qax_result;
}

inline int dmsoft::WriteDouble(int hwnd, const QString& addr, double v)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&v};
    qt_metacall(QMetaObject::InvokeMetaMethod, 314, _a);
    return qax_result;
}

inline int dmsoft::WriteFile(const QString& file, const QString& content)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&file, (void*)&content};
    qt_metacall(QMetaObject::InvokeMetaMethod, 315, _a);
    return qax_result;
}

inline int dmsoft::WriteFloat(int hwnd, const QString& addr, double v)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&v};
    qt_metacall(QMetaObject::InvokeMetaMethod, 316, _a);
    return qax_result;
}

inline int dmsoft::WriteIni(const QString& section, const QString& key, const QString& v, const QString& file)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&section, (void*)&key, (void*)&v, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 317, _a);
    return qax_result;
}

inline int dmsoft::WriteIniPwd(const QString& section, const QString& key, const QString& v, const QString& file, const QString& pwd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&section, (void*)&key, (void*)&v, (void*)&file, (void*)&pwd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 318, _a);
    return qax_result;
}

inline int dmsoft::WriteInt(int hwnd, const QString& addr, int type, int v)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&type, (void*)&v};
    qt_metacall(QMetaObject::InvokeMetaMethod, 319, _a);
    return qax_result;
}

inline int dmsoft::WriteString(int hwnd, const QString& addr, int type, const QString& v)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&type, (void*)&v};
    qt_metacall(QMetaObject::InvokeMetaMethod, 320, _a);
    return qax_result;
}

inline int dmsoft::delay(int mis)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&mis};
    qt_metacall(QMetaObject::InvokeMetaMethod, 321, _a);
    return qax_result;
}


inline int Idmsoft::ActiveInputMethod(int hwnd, const QString& id)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 8, _a);
    return qax_result;
}

inline int Idmsoft::AddDict(int index, const QString& dict_info)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index, (void*)&dict_info};
    qt_metacall(QMetaObject::InvokeMetaMethod, 9, _a);
    return qax_result;
}

inline QString Idmsoft::AppendPicAddr(const QString& pic_info, int addr, int size)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pic_info, (void*)&addr, (void*)&size};
    qt_metacall(QMetaObject::InvokeMetaMethod, 10, _a);
    return qax_result;
}

inline int Idmsoft::AsmAdd(const QString& asm_ins)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&asm_ins};
    qt_metacall(QMetaObject::InvokeMetaMethod, 11, _a);
    return qax_result;
}

inline int Idmsoft::AsmCall(int hwnd, int mode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 12, _a);
    return qax_result;
}

inline int Idmsoft::AsmClear()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 13, _a);
    return qax_result;
}

inline QString Idmsoft::AsmCode(int base_addr)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&base_addr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 14, _a);
    return qax_result;
}

inline QString Idmsoft::Assemble(const QString& asm_code, int base_addr, int is_upper)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&asm_code, (void*)&base_addr, (void*)&is_upper};
    qt_metacall(QMetaObject::InvokeMetaMethod, 15, _a);
    return qax_result;
}

inline QString Idmsoft::BGR2RGB(const QString& bgr_color)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&bgr_color};
    qt_metacall(QMetaObject::InvokeMetaMethod, 16, _a);
    return qax_result;
}

inline int Idmsoft::Beep(int fre, int delay)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&fre, (void*)&delay};
    qt_metacall(QMetaObject::InvokeMetaMethod, 17, _a);
    return qax_result;
}

inline int Idmsoft::BindWindow(int hwnd, const QString& display, const QString& mouse, const QString& keypad, int mode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&display, (void*)&mouse, (void*)&keypad, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 18, _a);
    return qax_result;
}

inline int Idmsoft::BindWindowEx(int hwnd, const QString& display, const QString& mouse, const QString& keypad, const QString& public_desc, int mode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&display, (void*)&mouse, (void*)&keypad, (void*)&public_desc, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 19, _a);
    return qax_result;
}

inline int Idmsoft::Capture(int x1, int y1, int x2, int y2, const QString& file)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 20, _a);
    return qax_result;
}

inline int Idmsoft::CaptureGif(int x1, int y1, int x2, int y2, const QString& file, int delay, int time)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&file, (void*)&delay, (void*)&time};
    qt_metacall(QMetaObject::InvokeMetaMethod, 21, _a);
    return qax_result;
}

inline int Idmsoft::CaptureJpg(int x1, int y1, int x2, int y2, const QString& file, int quality)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&file, (void*)&quality};
    qt_metacall(QMetaObject::InvokeMetaMethod, 22, _a);
    return qax_result;
}

inline int Idmsoft::CapturePng(int x1, int y1, int x2, int y2, const QString& file)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 23, _a);
    return qax_result;
}

inline int Idmsoft::CapturePre(const QString& file)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 24, _a);
    return qax_result;
}

inline int Idmsoft::CheckFontSmooth()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 25, _a);
    return qax_result;
}

inline int Idmsoft::CheckInputMethod(int hwnd, const QString& id)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 26, _a);
    return qax_result;
}

inline int Idmsoft::CheckUAC()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 27, _a);
    return qax_result;
}

inline int Idmsoft::ClearDict(int index)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 28, _a);
    return qax_result;
}

inline int Idmsoft::ClientToScreen(int hwnd, QVariant& x, QVariant& y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 29, _a);
    return qax_result;
}

inline int Idmsoft::CmpColor(int x, int y, const QString& color, double sim)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x, (void*)&y, (void*)&color, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 30, _a);
    return qax_result;
}

inline int Idmsoft::CopyFile(const QString& src_file, const QString& dst_file, int over)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&src_file, (void*)&dst_file, (void*)&over};
    qt_metacall(QMetaObject::InvokeMetaMethod, 31, _a);
    return qax_result;
}

inline int Idmsoft::CreateFolder(const QString& folder_name)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&folder_name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 32, _a);
    return qax_result;
}

inline int Idmsoft::CreateFoobarCustom(int hwnd, int x, int y, const QString& pic, const QString& trans_color, double sim)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x, (void*)&y, (void*)&pic, (void*)&trans_color, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 33, _a);
    return qax_result;
}

inline int Idmsoft::CreateFoobarEllipse(int hwnd, int x, int y, int w, int h)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x, (void*)&y, (void*)&w, (void*)&h};
    qt_metacall(QMetaObject::InvokeMetaMethod, 34, _a);
    return qax_result;
}

inline int Idmsoft::CreateFoobarRect(int hwnd, int x, int y, int w, int h)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x, (void*)&y, (void*)&w, (void*)&h};
    qt_metacall(QMetaObject::InvokeMetaMethod, 35, _a);
    return qax_result;
}

inline int Idmsoft::CreateFoobarRoundRect(int hwnd, int x, int y, int w, int h, int rw, int rh)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x, (void*)&y, (void*)&w, (void*)&h, (void*)&rw, (void*)&rh};
    qt_metacall(QMetaObject::InvokeMetaMethod, 36, _a);
    return qax_result;
}

inline int Idmsoft::DecodeFile(const QString& file, const QString& pwd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&file, (void*)&pwd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 37, _a);
    return qax_result;
}

inline int Idmsoft::DelEnv(int index, const QString& name)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index, (void*)&name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 38, _a);
    return qax_result;
}

inline int Idmsoft::DeleteFile(const QString& file)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 39, _a);
    return qax_result;
}

inline int Idmsoft::DeleteFolder(const QString& folder_name)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&folder_name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 40, _a);
    return qax_result;
}

inline int Idmsoft::DeleteIni(const QString& section, const QString& key, const QString& file)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&section, (void*)&key, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 41, _a);
    return qax_result;
}

inline int Idmsoft::DeleteIniPwd(const QString& section, const QString& key, const QString& file, const QString& pwd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&section, (void*)&key, (void*)&file, (void*)&pwd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 42, _a);
    return qax_result;
}

inline int Idmsoft::DisableFontSmooth()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 43, _a);
    return qax_result;
}

inline int Idmsoft::DisablePowerSave()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 44, _a);
    return qax_result;
}

inline int Idmsoft::DisableScreenSave()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 45, _a);
    return qax_result;
}

inline int Idmsoft::DmGuard(int en, const QString& type)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&en, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 46, _a);
    return qax_result;
}

inline QString Idmsoft::DoubleToData(double double_value)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&double_value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 47, _a);
    return qax_result;
}

inline int Idmsoft::DownCpu(int rate)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&rate};
    qt_metacall(QMetaObject::InvokeMetaMethod, 48, _a);
    return qax_result;
}

inline int Idmsoft::DownloadFile(const QString& url, const QString& save_file, int timeout)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&url, (void*)&save_file, (void*)&timeout};
    qt_metacall(QMetaObject::InvokeMetaMethod, 49, _a);
    return qax_result;
}

inline int Idmsoft::EnableBind(int en)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&en};
    qt_metacall(QMetaObject::InvokeMetaMethod, 50, _a);
    return qax_result;
}

inline int Idmsoft::EnableDisplayDebug(int enable_debug)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&enable_debug};
    qt_metacall(QMetaObject::InvokeMetaMethod, 51, _a);
    return qax_result;
}

inline int Idmsoft::EnableFakeActive(int en)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&en};
    qt_metacall(QMetaObject::InvokeMetaMethod, 52, _a);
    return qax_result;
}

inline int Idmsoft::EnableGetColorByCapture(int en)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&en};
    qt_metacall(QMetaObject::InvokeMetaMethod, 53, _a);
    return qax_result;
}

inline int Idmsoft::EnableIme(int en)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&en};
    qt_metacall(QMetaObject::InvokeMetaMethod, 54, _a);
    return qax_result;
}

inline int Idmsoft::EnableKeypadMsg(int en)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&en};
    qt_metacall(QMetaObject::InvokeMetaMethod, 55, _a);
    return qax_result;
}

inline int Idmsoft::EnableKeypadPatch(int en)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&en};
    qt_metacall(QMetaObject::InvokeMetaMethod, 56, _a);
    return qax_result;
}

inline int Idmsoft::EnableKeypadSync(int en, int time_out)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&en, (void*)&time_out};
    qt_metacall(QMetaObject::InvokeMetaMethod, 57, _a);
    return qax_result;
}

inline int Idmsoft::EnableMouseMsg(int en)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&en};
    qt_metacall(QMetaObject::InvokeMetaMethod, 58, _a);
    return qax_result;
}

inline int Idmsoft::EnableMouseSync(int en, int time_out)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&en, (void*)&time_out};
    qt_metacall(QMetaObject::InvokeMetaMethod, 59, _a);
    return qax_result;
}

inline int Idmsoft::EnableRealKeypad(int en)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&en};
    qt_metacall(QMetaObject::InvokeMetaMethod, 60, _a);
    return qax_result;
}

inline int Idmsoft::EnableRealMouse(int en, int mousedelay, int mousestep)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&en, (void*)&mousedelay, (void*)&mousestep};
    qt_metacall(QMetaObject::InvokeMetaMethod, 61, _a);
    return qax_result;
}

inline int Idmsoft::EnableSpeedDx(int en)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&en};
    qt_metacall(QMetaObject::InvokeMetaMethod, 62, _a);
    return qax_result;
}

inline int Idmsoft::EncodeFile(const QString& file, const QString& pwd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&file, (void*)&pwd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 63, _a);
    return qax_result;
}

inline int Idmsoft::EnterCri()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 64, _a);
    return qax_result;
}

inline QString Idmsoft::EnumWindow(int parent, const QString& title, const QString& class_name, int filter)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&parent, (void*)&title, (void*)&class_name, (void*)&filter};
    qt_metacall(QMetaObject::InvokeMetaMethod, 65, _a);
    return qax_result;
}

inline QString Idmsoft::EnumWindowByProcess(const QString& process_name, const QString& title, const QString& class_name, int filter)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&process_name, (void*)&title, (void*)&class_name, (void*)&filter};
    qt_metacall(QMetaObject::InvokeMetaMethod, 66, _a);
    return qax_result;
}

inline QString Idmsoft::EnumWindowSuper(const QString& spec1, int flag1, int type1, const QString& spec2, int flag2, int type2, int sort)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&spec1, (void*)&flag1, (void*)&type1, (void*)&spec2, (void*)&flag2, (void*)&type2, (void*)&sort};
    qt_metacall(QMetaObject::InvokeMetaMethod, 67, _a);
    return qax_result;
}

inline QString Idmsoft::ExcludePos(const QString& all_pos, int type, int x1, int y1, int x2, int y2)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&all_pos, (void*)&type, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2};
    qt_metacall(QMetaObject::InvokeMetaMethod, 68, _a);
    return qax_result;
}

inline int Idmsoft::ExitOs(int type)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 69, _a);
    return qax_result;
}

inline int Idmsoft::FaqCancel()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 70, _a);
    return qax_result;
}

inline int Idmsoft::FaqCapture(int x1, int y1, int x2, int y2, int quality, int delay, int time)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&quality, (void*)&delay, (void*)&time};
    qt_metacall(QMetaObject::InvokeMetaMethod, 71, _a);
    return qax_result;
}

inline int Idmsoft::FaqCaptureFromFile(int x1, int y1, int x2, int y2, const QString& file, int quality)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&file, (void*)&quality};
    qt_metacall(QMetaObject::InvokeMetaMethod, 72, _a);
    return qax_result;
}

inline QString Idmsoft::FaqFetch()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 73, _a);
    return qax_result;
}

inline int Idmsoft::FaqGetSize(int handle)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&handle};
    qt_metacall(QMetaObject::InvokeMetaMethod, 74, _a);
    return qax_result;
}

inline int Idmsoft::FaqPost(const QString& server, int handle, int request_type, int time_out)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&server, (void*)&handle, (void*)&request_type, (void*)&time_out};
    qt_metacall(QMetaObject::InvokeMetaMethod, 75, _a);
    return qax_result;
}

inline int Idmsoft::FaqRelease(int handle)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&handle};
    qt_metacall(QMetaObject::InvokeMetaMethod, 76, _a);
    return qax_result;
}

inline QString Idmsoft::FaqSend(const QString& server, int handle, int request_type, int time_out)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&server, (void*)&handle, (void*)&request_type, (void*)&time_out};
    qt_metacall(QMetaObject::InvokeMetaMethod, 77, _a);
    return qax_result;
}

inline QString Idmsoft::FetchWord(int x1, int y1, int x2, int y2, const QString& color, const QString& word)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&color, (void*)&word};
    qt_metacall(QMetaObject::InvokeMetaMethod, 78, _a);
    return qax_result;
}

inline int Idmsoft::FindColor(int x1, int y1, int x2, int y2, const QString& color, double sim, int dir, QVariant& x, QVariant& y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&color, (void*)&sim, (void*)&dir, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 79, _a);
    return qax_result;
}

inline QString Idmsoft::FindColorE(int x1, int y1, int x2, int y2, const QString& color, double sim, int dir)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&color, (void*)&sim, (void*)&dir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 80, _a);
    return qax_result;
}

inline QString Idmsoft::FindColorEx(int x1, int y1, int x2, int y2, const QString& color, double sim, int dir)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&color, (void*)&sim, (void*)&dir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 81, _a);
    return qax_result;
}

inline QString Idmsoft::FindData(int hwnd, const QString& addr_range, const QString& data)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 82, _a);
    return qax_result;
}

inline QString Idmsoft::FindDataEx(int hwnd, const QString& addr_range, const QString& data, int step, int multi_thread, int mode)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&data, (void*)&step, (void*)&multi_thread, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 83, _a);
    return qax_result;
}

inline QString Idmsoft::FindDouble(int hwnd, const QString& addr_range, double double_value_min, double double_value_max)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&double_value_min, (void*)&double_value_max};
    qt_metacall(QMetaObject::InvokeMetaMethod, 84, _a);
    return qax_result;
}

inline QString Idmsoft::FindDoubleEx(int hwnd, const QString& addr_range, double double_value_min, double double_value_max, int step, int multi_thread, int mode)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&double_value_min, (void*)&double_value_max, (void*)&step, (void*)&multi_thread, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 85, _a);
    return qax_result;
}

inline QString Idmsoft::FindFloat(int hwnd, const QString& addr_range, double float_value_min, double float_value_max)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&float_value_min, (void*)&float_value_max};
    qt_metacall(QMetaObject::InvokeMetaMethod, 86, _a);
    return qax_result;
}

inline QString Idmsoft::FindFloatEx(int hwnd, const QString& addr_range, double float_value_min, double float_value_max, int step, int multi_thread, int mode)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&float_value_min, (void*)&float_value_max, (void*)&step, (void*)&multi_thread, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 87, _a);
    return qax_result;
}

inline int Idmsoft::FindInputMethod(const QString& id)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 88, _a);
    return qax_result;
}

inline QString Idmsoft::FindInt(int hwnd, const QString& addr_range, int int_value_min, int int_value_max, int type)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&int_value_min, (void*)&int_value_max, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 89, _a);
    return qax_result;
}

inline QString Idmsoft::FindIntEx(int hwnd, const QString& addr_range, int int_value_min, int int_value_max, int type, int step, int multi_thread, int mode)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&int_value_min, (void*)&int_value_max, (void*)&type, (void*)&step, (void*)&multi_thread, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 90, _a);
    return qax_result;
}

inline int Idmsoft::FindMulColor(int x1, int y1, int x2, int y2, const QString& color, double sim)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&color, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 91, _a);
    return qax_result;
}

inline int Idmsoft::FindMultiColor(int x1, int y1, int x2, int y2, const QString& first_color, const QString& offset_color, double sim, int dir, QVariant& x, QVariant& y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&first_color, (void*)&offset_color, (void*)&sim, (void*)&dir, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 92, _a);
    return qax_result;
}

inline QString Idmsoft::FindMultiColorE(int x1, int y1, int x2, int y2, const QString& first_color, const QString& offset_color, double sim, int dir)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&first_color, (void*)&offset_color, (void*)&sim, (void*)&dir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 93, _a);
    return qax_result;
}

inline QString Idmsoft::FindMultiColorEx(int x1, int y1, int x2, int y2, const QString& first_color, const QString& offset_color, double sim, int dir)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&first_color, (void*)&offset_color, (void*)&sim, (void*)&dir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 94, _a);
    return qax_result;
}

inline QString Idmsoft::FindNearestPos(const QString& all_pos, int type, int x, int y)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&all_pos, (void*)&type, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 95, _a);
    return qax_result;
}

inline int Idmsoft::FindPic(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir, QVariant& x, QVariant& y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&pic_name, (void*)&delta_color, (void*)&sim, (void*)&dir, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 96, _a);
    return qax_result;
}

inline QString Idmsoft::FindPicE(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&pic_name, (void*)&delta_color, (void*)&sim, (void*)&dir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 97, _a);
    return qax_result;
}

inline QString Idmsoft::FindPicEx(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&pic_name, (void*)&delta_color, (void*)&sim, (void*)&dir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 98, _a);
    return qax_result;
}

inline QString Idmsoft::FindPicExS(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&pic_name, (void*)&delta_color, (void*)&sim, (void*)&dir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 99, _a);
    return qax_result;
}

inline int Idmsoft::FindPicMem(int x1, int y1, int x2, int y2, const QString& pic_info, const QString& delta_color, double sim, int dir, QVariant& x, QVariant& y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&pic_info, (void*)&delta_color, (void*)&sim, (void*)&dir, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 100, _a);
    return qax_result;
}

inline QString Idmsoft::FindPicMemE(int x1, int y1, int x2, int y2, const QString& pic_info, const QString& delta_color, double sim, int dir)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&pic_info, (void*)&delta_color, (void*)&sim, (void*)&dir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 101, _a);
    return qax_result;
}

inline QString Idmsoft::FindPicMemEx(int x1, int y1, int x2, int y2, const QString& pic_info, const QString& delta_color, double sim, int dir)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&pic_info, (void*)&delta_color, (void*)&sim, (void*)&dir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 102, _a);
    return qax_result;
}

inline QString Idmsoft::FindPicS(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& delta_color, double sim, int dir, QVariant& x, QVariant& y)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&pic_name, (void*)&delta_color, (void*)&sim, (void*)&dir, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 103, _a);
    return qax_result;
}

inline int Idmsoft::FindShape(int x1, int y1, int x2, int y2, const QString& offset_color, double sim, int dir, QVariant& x, QVariant& y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&offset_color, (void*)&sim, (void*)&dir, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 104, _a);
    return qax_result;
}

inline QString Idmsoft::FindShapeE(int x1, int y1, int x2, int y2, const QString& offset_color, double sim, int dir)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&offset_color, (void*)&sim, (void*)&dir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 105, _a);
    return qax_result;
}

inline QString Idmsoft::FindShapeEx(int x1, int y1, int x2, int y2, const QString& offset_color, double sim, int dir)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&offset_color, (void*)&sim, (void*)&dir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 106, _a);
    return qax_result;
}

inline int Idmsoft::FindStr(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim, QVariant& x, QVariant& y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&str, (void*)&color, (void*)&sim, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 107, _a);
    return qax_result;
}

inline QString Idmsoft::FindStrE(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&str, (void*)&color, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 108, _a);
    return qax_result;
}

inline QString Idmsoft::FindStrEx(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&str, (void*)&color, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 109, _a);
    return qax_result;
}

inline QString Idmsoft::FindStrExS(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&str, (void*)&color, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 110, _a);
    return qax_result;
}

inline int Idmsoft::FindStrFast(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim, QVariant& x, QVariant& y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&str, (void*)&color, (void*)&sim, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 111, _a);
    return qax_result;
}

inline QString Idmsoft::FindStrFastE(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&str, (void*)&color, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 112, _a);
    return qax_result;
}

inline QString Idmsoft::FindStrFastEx(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&str, (void*)&color, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 113, _a);
    return qax_result;
}

inline QString Idmsoft::FindStrFastExS(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&str, (void*)&color, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 114, _a);
    return qax_result;
}

inline QString Idmsoft::FindStrFastS(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim, QVariant& x, QVariant& y)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&str, (void*)&color, (void*)&sim, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 115, _a);
    return qax_result;
}

inline QString Idmsoft::FindStrS(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim, QVariant& x, QVariant& y)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&str, (void*)&color, (void*)&sim, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 116, _a);
    return qax_result;
}

inline int Idmsoft::FindStrWithFont(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim, const QString& font_name, int font_size, int flag, QVariant& x, QVariant& y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&str, (void*)&color, (void*)&sim, (void*)&font_name, (void*)&font_size, (void*)&flag, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 117, _a);
    return qax_result;
}

inline QString Idmsoft::FindStrWithFontE(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim, const QString& font_name, int font_size, int flag)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&str, (void*)&color, (void*)&sim, (void*)&font_name, (void*)&font_size, (void*)&flag};
    qt_metacall(QMetaObject::InvokeMetaMethod, 118, _a);
    return qax_result;
}

inline QString Idmsoft::FindStrWithFontEx(int x1, int y1, int x2, int y2, const QString& str, const QString& color, double sim, const QString& font_name, int font_size, int flag)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&str, (void*)&color, (void*)&sim, (void*)&font_name, (void*)&font_size, (void*)&flag};
    qt_metacall(QMetaObject::InvokeMetaMethod, 119, _a);
    return qax_result;
}

inline QString Idmsoft::FindString(int hwnd, const QString& addr_range, const QString& string_value, int type)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&string_value, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 120, _a);
    return qax_result;
}

inline QString Idmsoft::FindStringEx(int hwnd, const QString& addr_range, const QString& string_value, int type, int step, int multi_thread, int mode)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr_range, (void*)&string_value, (void*)&type, (void*)&step, (void*)&multi_thread, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 121, _a);
    return qax_result;
}

inline int Idmsoft::FindWindow(const QString& class_name, const QString& title_name)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&class_name, (void*)&title_name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 122, _a);
    return qax_result;
}

inline int Idmsoft::FindWindowByProcess(const QString& process_name, const QString& class_name, const QString& title_name)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&process_name, (void*)&class_name, (void*)&title_name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 123, _a);
    return qax_result;
}

inline int Idmsoft::FindWindowByProcessId(int process_id, const QString& class_name, const QString& title_name)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&process_id, (void*)&class_name, (void*)&title_name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 124, _a);
    return qax_result;
}

inline int Idmsoft::FindWindowEx(int parent, const QString& class_name, const QString& title_name)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&parent, (void*)&class_name, (void*)&title_name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 125, _a);
    return qax_result;
}

inline int Idmsoft::FindWindowSuper(const QString& spec1, int flag1, int type1, const QString& spec2, int flag2, int type2)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&spec1, (void*)&flag1, (void*)&type1, (void*)&spec2, (void*)&flag2, (void*)&type2};
    qt_metacall(QMetaObject::InvokeMetaMethod, 126, _a);
    return qax_result;
}

inline QString Idmsoft::FloatToData(double float_value)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&float_value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 127, _a);
    return qax_result;
}

inline int Idmsoft::FoobarClearText(int hwnd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 128, _a);
    return qax_result;
}

inline int Idmsoft::FoobarClose(int hwnd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 129, _a);
    return qax_result;
}

inline int Idmsoft::FoobarDrawLine(int hwnd, int x1, int y1, int x2, int y2, const QString& color, int style, int width)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&color, (void*)&style, (void*)&width};
    qt_metacall(QMetaObject::InvokeMetaMethod, 130, _a);
    return qax_result;
}

inline int Idmsoft::FoobarDrawPic(int hwnd, int x, int y, const QString& pic, const QString& trans_color)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x, (void*)&y, (void*)&pic, (void*)&trans_color};
    qt_metacall(QMetaObject::InvokeMetaMethod, 131, _a);
    return qax_result;
}

inline int Idmsoft::FoobarDrawText(int hwnd, int x, int y, int w, int h, const QString& text, const QString& color, int align)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x, (void*)&y, (void*)&w, (void*)&h, (void*)&text, (void*)&color, (void*)&align};
    qt_metacall(QMetaObject::InvokeMetaMethod, 132, _a);
    return qax_result;
}

inline int Idmsoft::FoobarFillRect(int hwnd, int x1, int y1, int x2, int y2, const QString& color)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&color};
    qt_metacall(QMetaObject::InvokeMetaMethod, 133, _a);
    return qax_result;
}

inline int Idmsoft::FoobarLock(int hwnd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 134, _a);
    return qax_result;
}

inline int Idmsoft::FoobarPrintText(int hwnd, const QString& text, const QString& color)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&text, (void*)&color};
    qt_metacall(QMetaObject::InvokeMetaMethod, 135, _a);
    return qax_result;
}

inline int Idmsoft::FoobarSetFont(int hwnd, const QString& font_name, int size, int flag)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&font_name, (void*)&size, (void*)&flag};
    qt_metacall(QMetaObject::InvokeMetaMethod, 136, _a);
    return qax_result;
}

inline int Idmsoft::FoobarSetSave(int hwnd, const QString& file, int en, const QString& header)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&file, (void*)&en, (void*)&header};
    qt_metacall(QMetaObject::InvokeMetaMethod, 137, _a);
    return qax_result;
}

inline int Idmsoft::FoobarTextLineGap(int hwnd, int gap)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&gap};
    qt_metacall(QMetaObject::InvokeMetaMethod, 138, _a);
    return qax_result;
}

inline int Idmsoft::FoobarTextPrintDir(int hwnd, int dir)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&dir};
    qt_metacall(QMetaObject::InvokeMetaMethod, 139, _a);
    return qax_result;
}

inline int Idmsoft::FoobarTextRect(int hwnd, int x, int y, int w, int h)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x, (void*)&y, (void*)&w, (void*)&h};
    qt_metacall(QMetaObject::InvokeMetaMethod, 140, _a);
    return qax_result;
}

inline int Idmsoft::FoobarUnlock(int hwnd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 141, _a);
    return qax_result;
}

inline int Idmsoft::FoobarUpdate(int hwnd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 142, _a);
    return qax_result;
}

inline int Idmsoft::ForceUnBindWindow(int hwnd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 143, _a);
    return qax_result;
}

inline int Idmsoft::FreePic(const QString& pic_name)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pic_name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 144, _a);
    return qax_result;
}

inline int Idmsoft::FreeScreenData(int handle)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&handle};
    qt_metacall(QMetaObject::InvokeMetaMethod, 145, _a);
    return qax_result;
}

inline QString Idmsoft::GetAveHSV(int x1, int y1, int x2, int y2)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2};
    qt_metacall(QMetaObject::InvokeMetaMethod, 146, _a);
    return qax_result;
}

inline QString Idmsoft::GetAveRGB(int x1, int y1, int x2, int y2)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2};
    qt_metacall(QMetaObject::InvokeMetaMethod, 147, _a);
    return qax_result;
}

inline QString Idmsoft::GetBasePath()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 148, _a);
    return qax_result;
}

inline int Idmsoft::GetClientRect(int hwnd, QVariant& x1, QVariant& y1, QVariant& x2, QVariant& y2)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2};
    qt_metacall(QMetaObject::InvokeMetaMethod, 149, _a);
    return qax_result;
}

inline int Idmsoft::GetClientSize(int hwnd, QVariant& width, QVariant& height)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&width, (void*)&height};
    qt_metacall(QMetaObject::InvokeMetaMethod, 150, _a);
    return qax_result;
}

inline QString Idmsoft::GetClipboard()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 151, _a);
    return qax_result;
}

inline QString Idmsoft::GetColor(int x, int y)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 152, _a);
    return qax_result;
}

inline QString Idmsoft::GetColorBGR(int x, int y)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 153, _a);
    return qax_result;
}

inline QString Idmsoft::GetColorHSV(int x, int y)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 154, _a);
    return qax_result;
}

inline int Idmsoft::GetColorNum(int x1, int y1, int x2, int y2, const QString& color, double sim)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&color, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 155, _a);
    return qax_result;
}

inline int Idmsoft::GetCursorPos(QVariant& x, QVariant& y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 156, _a);
    return qax_result;
}

inline QString Idmsoft::GetCursorShape()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 157, _a);
    return qax_result;
}

inline QString Idmsoft::GetCursorShapeEx(int type)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 158, _a);
    return qax_result;
}

inline QString Idmsoft::GetCursorSpot()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 159, _a);
    return qax_result;
}

inline QString Idmsoft::GetDict(int index, int font_index)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index, (void*)&font_index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 160, _a);
    return qax_result;
}

inline int Idmsoft::GetDictCount(int index)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 161, _a);
    return qax_result;
}

inline QString Idmsoft::GetDictInfo(const QString& str, const QString& font_name, int font_size, int flag)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&str, (void*)&font_name, (void*)&font_size, (void*)&flag};
    qt_metacall(QMetaObject::InvokeMetaMethod, 162, _a);
    return qax_result;
}

inline QString Idmsoft::GetDir(int type)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 163, _a);
    return qax_result;
}

inline QString Idmsoft::GetDiskSerial()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 164, _a);
    return qax_result;
}

inline int Idmsoft::GetDmCount()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 165, _a);
    return qax_result;
}

inline QString Idmsoft::GetEnv(int index, const QString& name)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index, (void*)&name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 166, _a);
    return qax_result;
}

inline int Idmsoft::GetFileLength(const QString& file)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 167, _a);
    return qax_result;
}

inline int Idmsoft::GetForegroundFocus()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 168, _a);
    return qax_result;
}

inline int Idmsoft::GetForegroundWindow()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 169, _a);
    return qax_result;
}

inline int Idmsoft::GetID()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 170, _a);
    return qax_result;
}

inline int Idmsoft::GetKeyState(int vk)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&vk};
    qt_metacall(QMetaObject::InvokeMetaMethod, 171, _a);
    return qax_result;
}

inline int Idmsoft::GetLastError()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 172, _a);
    return qax_result;
}

inline QString Idmsoft::GetMac()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 173, _a);
    return qax_result;
}

inline QString Idmsoft::GetMachineCode()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 174, _a);
    return qax_result;
}

inline QString Idmsoft::GetMachineCodeNoMac()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 175, _a);
    return qax_result;
}

inline int Idmsoft::GetModuleBaseAddr(int hwnd, const QString& module_name)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&module_name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 176, _a);
    return qax_result;
}

inline int Idmsoft::GetMousePointWindow()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 177, _a);
    return qax_result;
}

inline QString Idmsoft::GetNetTime()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 178, _a);
    return qax_result;
}

inline QString Idmsoft::GetNetTimeSafe()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 179, _a);
    return qax_result;
}

inline int Idmsoft::GetNowDict()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 180, _a);
    return qax_result;
}

inline int Idmsoft::GetOsType()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 181, _a);
    return qax_result;
}

inline QString Idmsoft::GetPath()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 182, _a);
    return qax_result;
}

inline QString Idmsoft::GetPicSize(const QString& pic_name)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pic_name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 183, _a);
    return qax_result;
}

inline int Idmsoft::GetPointWindow(int x, int y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 184, _a);
    return qax_result;
}

inline int Idmsoft::GetResultCount(const QString& str)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&str};
    qt_metacall(QMetaObject::InvokeMetaMethod, 185, _a);
    return qax_result;
}

inline int Idmsoft::GetResultPos(const QString& str, int index, QVariant& x, QVariant& y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&str, (void*)&index, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 186, _a);
    return qax_result;
}

inline int Idmsoft::GetScreenData(int x1, int y1, int x2, int y2)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2};
    qt_metacall(QMetaObject::InvokeMetaMethod, 187, _a);
    return qax_result;
}

inline int Idmsoft::GetScreenDataBmp(int x1, int y1, int x2, int y2, QVariant& data, QVariant& size)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&data, (void*)&size};
    qt_metacall(QMetaObject::InvokeMetaMethod, 188, _a);
    return qax_result;
}

inline int Idmsoft::GetScreenDepth()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 189, _a);
    return qax_result;
}

inline int Idmsoft::GetScreenHeight()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 190, _a);
    return qax_result;
}

inline int Idmsoft::GetScreenWidth()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 191, _a);
    return qax_result;
}

inline int Idmsoft::GetSpecialWindow(int flag)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&flag};
    qt_metacall(QMetaObject::InvokeMetaMethod, 192, _a);
    return qax_result;
}

inline int Idmsoft::GetTime()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 193, _a);
    return qax_result;
}

inline int Idmsoft::GetWindow(int hwnd, int flag)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&flag};
    qt_metacall(QMetaObject::InvokeMetaMethod, 194, _a);
    return qax_result;
}

inline QString Idmsoft::GetWindowClass(int hwnd)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 195, _a);
    return qax_result;
}

inline int Idmsoft::GetWindowProcessId(int hwnd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 196, _a);
    return qax_result;
}

inline QString Idmsoft::GetWindowProcessPath(int hwnd)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 197, _a);
    return qax_result;
}

inline int Idmsoft::GetWindowRect(int hwnd, QVariant& x1, QVariant& y1, QVariant& x2, QVariant& y2)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2};
    qt_metacall(QMetaObject::InvokeMetaMethod, 198, _a);
    return qax_result;
}

inline int Idmsoft::GetWindowState(int hwnd, int flag)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&flag};
    qt_metacall(QMetaObject::InvokeMetaMethod, 199, _a);
    return qax_result;
}

inline QString Idmsoft::GetWindowTitle(int hwnd)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 200, _a);
    return qax_result;
}

inline int Idmsoft::GetWordResultCount(const QString& str)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&str};
    qt_metacall(QMetaObject::InvokeMetaMethod, 201, _a);
    return qax_result;
}

inline int Idmsoft::GetWordResultPos(const QString& str, int index, QVariant& x, QVariant& y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&str, (void*)&index, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 202, _a);
    return qax_result;
}

inline QString Idmsoft::GetWordResultStr(const QString& str, int index)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&str, (void*)&index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 203, _a);
    return qax_result;
}

inline QString Idmsoft::GetWords(int x1, int y1, int x2, int y2, const QString& color, double sim)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&color, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 204, _a);
    return qax_result;
}

inline QString Idmsoft::GetWordsNoDict(int x1, int y1, int x2, int y2, const QString& color)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&color};
    qt_metacall(QMetaObject::InvokeMetaMethod, 205, _a);
    return qax_result;
}

inline int Idmsoft::ImageToBmp(const QString& pic_name, const QString& bmp_name)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pic_name, (void*)&bmp_name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 206, _a);
    return qax_result;
}

inline QString Idmsoft::IntToData(int int_value, int type)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&int_value, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 207, _a);
    return qax_result;
}

inline int Idmsoft::Is64Bit()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 208, _a);
    return qax_result;
}

inline int Idmsoft::IsBind(int hwnd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 209, _a);
    return qax_result;
}

inline int Idmsoft::IsDisplayDead(int x1, int y1, int x2, int y2, int t)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&t};
    qt_metacall(QMetaObject::InvokeMetaMethod, 210, _a);
    return qax_result;
}

inline int Idmsoft::IsFileExist(const QString& file)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 211, _a);
    return qax_result;
}

inline int Idmsoft::KeyDown(int vk)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&vk};
    qt_metacall(QMetaObject::InvokeMetaMethod, 212, _a);
    return qax_result;
}

inline int Idmsoft::KeyDownChar(const QString& key_str)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&key_str};
    qt_metacall(QMetaObject::InvokeMetaMethod, 213, _a);
    return qax_result;
}

inline int Idmsoft::KeyPress(int vk)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&vk};
    qt_metacall(QMetaObject::InvokeMetaMethod, 214, _a);
    return qax_result;
}

inline int Idmsoft::KeyPressChar(const QString& key_str)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&key_str};
    qt_metacall(QMetaObject::InvokeMetaMethod, 215, _a);
    return qax_result;
}

inline int Idmsoft::KeyPressStr(const QString& key_str, int delay)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&key_str, (void*)&delay};
    qt_metacall(QMetaObject::InvokeMetaMethod, 216, _a);
    return qax_result;
}

inline int Idmsoft::KeyUp(int vk)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&vk};
    qt_metacall(QMetaObject::InvokeMetaMethod, 217, _a);
    return qax_result;
}

inline int Idmsoft::KeyUpChar(const QString& key_str)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&key_str};
    qt_metacall(QMetaObject::InvokeMetaMethod, 218, _a);
    return qax_result;
}

inline int Idmsoft::LeaveCri()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 219, _a);
    return qax_result;
}

inline int Idmsoft::LeftClick()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 220, _a);
    return qax_result;
}

inline int Idmsoft::LeftDoubleClick()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 221, _a);
    return qax_result;
}

inline int Idmsoft::LeftDown()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 222, _a);
    return qax_result;
}

inline int Idmsoft::LeftUp()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 223, _a);
    return qax_result;
}

inline int Idmsoft::LoadPic(const QString& pic_name)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pic_name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 224, _a);
    return qax_result;
}

inline int Idmsoft::LockDisplay(int lock)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lock};
    qt_metacall(QMetaObject::InvokeMetaMethod, 225, _a);
    return qax_result;
}

inline int Idmsoft::LockInput(int lock)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&lock};
    qt_metacall(QMetaObject::InvokeMetaMethod, 226, _a);
    return qax_result;
}

inline int Idmsoft::LockMouseRect(int x1, int y1, int x2, int y2)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2};
    qt_metacall(QMetaObject::InvokeMetaMethod, 227, _a);
    return qax_result;
}

inline int Idmsoft::Log(const QString& info)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&info};
    qt_metacall(QMetaObject::InvokeMetaMethod, 228, _a);
    return qax_result;
}

inline QString Idmsoft::MatchPicName(const QString& pic_name)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pic_name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 229, _a);
    return qax_result;
}

inline QString Idmsoft::Md5(const QString& str)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&str};
    qt_metacall(QMetaObject::InvokeMetaMethod, 230, _a);
    return qax_result;
}

inline int Idmsoft::MiddleClick()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 231, _a);
    return qax_result;
}

inline int Idmsoft::MoveDD(int dx, int dy)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&dx, (void*)&dy};
    qt_metacall(QMetaObject::InvokeMetaMethod, 232, _a);
    return qax_result;
}

inline int Idmsoft::MoveFile(const QString& src_file, const QString& dst_file)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&src_file, (void*)&dst_file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 233, _a);
    return qax_result;
}

inline int Idmsoft::MoveR(int rx, int ry)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&rx, (void*)&ry};
    qt_metacall(QMetaObject::InvokeMetaMethod, 234, _a);
    return qax_result;
}

inline int Idmsoft::MoveTo(int x, int y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 235, _a);
    return qax_result;
}

inline QString Idmsoft::MoveToEx(int x, int y, int w, int h)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x, (void*)&y, (void*)&w, (void*)&h};
    qt_metacall(QMetaObject::InvokeMetaMethod, 236, _a);
    return qax_result;
}

inline int Idmsoft::MoveWindow(int hwnd, int x, int y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 237, _a);
    return qax_result;
}

inline QString Idmsoft::Ocr(int x1, int y1, int x2, int y2, const QString& color, double sim)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&color, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 238, _a);
    return qax_result;
}

inline QString Idmsoft::OcrEx(int x1, int y1, int x2, int y2, const QString& color, double sim)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&color, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 239, _a);
    return qax_result;
}

inline QString Idmsoft::OcrInFile(int x1, int y1, int x2, int y2, const QString& pic_name, const QString& color, double sim)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&pic_name, (void*)&color, (void*)&sim};
    qt_metacall(QMetaObject::InvokeMetaMethod, 240, _a);
    return qax_result;
}

inline int Idmsoft::Play(const QString& file)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 241, _a);
    return qax_result;
}

inline QString Idmsoft::RGB2BGR(const QString& rgb_color)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&rgb_color};
    qt_metacall(QMetaObject::InvokeMetaMethod, 242, _a);
    return qax_result;
}

inline QString Idmsoft::ReadData(int hwnd, const QString& addr, int len)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&len};
    qt_metacall(QMetaObject::InvokeMetaMethod, 243, _a);
    return qax_result;
}

inline double Idmsoft::ReadDouble(int hwnd, const QString& addr)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 244, _a);
    return qax_result;
}

inline QString Idmsoft::ReadFile(const QString& file)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 245, _a);
    return qax_result;
}

inline double Idmsoft::ReadFloat(int hwnd, const QString& addr)
{
    double qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 246, _a);
    return qax_result;
}

inline QString Idmsoft::ReadIni(const QString& section, const QString& key, const QString& file)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&section, (void*)&key, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 247, _a);
    return qax_result;
}

inline QString Idmsoft::ReadIniPwd(const QString& section, const QString& key, const QString& file, const QString& pwd)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&section, (void*)&key, (void*)&file, (void*)&pwd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 248, _a);
    return qax_result;
}

inline int Idmsoft::ReadInt(int hwnd, const QString& addr, int type)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 249, _a);
    return qax_result;
}

inline QString Idmsoft::ReadString(int hwnd, const QString& addr, int type, int len)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&type, (void*)&len};
    qt_metacall(QMetaObject::InvokeMetaMethod, 250, _a);
    return qax_result;
}

inline int Idmsoft::Reg(const QString& code, const QString& Ver)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&code, (void*)&Ver};
    qt_metacall(QMetaObject::InvokeMetaMethod, 251, _a);
    return qax_result;
}

inline int Idmsoft::RegEx(const QString& code, const QString& Ver, const QString& ip)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&code, (void*)&Ver, (void*)&ip};
    qt_metacall(QMetaObject::InvokeMetaMethod, 252, _a);
    return qax_result;
}

inline int Idmsoft::RegExNoMac(const QString& code, const QString& Ver, const QString& ip)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&code, (void*)&Ver, (void*)&ip};
    qt_metacall(QMetaObject::InvokeMetaMethod, 253, _a);
    return qax_result;
}

inline int Idmsoft::RegNoMac(const QString& code, const QString& Ver)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&code, (void*)&Ver};
    qt_metacall(QMetaObject::InvokeMetaMethod, 254, _a);
    return qax_result;
}

inline int Idmsoft::RightClick()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 255, _a);
    return qax_result;
}

inline int Idmsoft::RightDown()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 256, _a);
    return qax_result;
}

inline int Idmsoft::RightUp()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 257, _a);
    return qax_result;
}

inline int Idmsoft::RunApp(const QString& path, int mode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&path, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 258, _a);
    return qax_result;
}

inline int Idmsoft::SaveDict(int index, const QString& file)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 259, _a);
    return qax_result;
}

inline int Idmsoft::ScreenToClient(int hwnd, QVariant& x, QVariant& y)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 260, _a);
    return qax_result;
}

inline QString Idmsoft::SelectDirectory()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 261, _a);
    return qax_result;
}

inline QString Idmsoft::SelectFile()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 262, _a);
    return qax_result;
}

inline int Idmsoft::SendCommand(const QString& cmd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&cmd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 263, _a);
    return qax_result;
}

inline int Idmsoft::SendPaste(int hwnd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 264, _a);
    return qax_result;
}

inline int Idmsoft::SendString(int hwnd, const QString& str)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&str};
    qt_metacall(QMetaObject::InvokeMetaMethod, 265, _a);
    return qax_result;
}

inline int Idmsoft::SendString2(int hwnd, const QString& str)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&str};
    qt_metacall(QMetaObject::InvokeMetaMethod, 266, _a);
    return qax_result;
}

inline int Idmsoft::SendStringIme(const QString& str)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&str};
    qt_metacall(QMetaObject::InvokeMetaMethod, 267, _a);
    return qax_result;
}

inline int Idmsoft::SetClientSize(int hwnd, int width, int height)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&width, (void*)&height};
    qt_metacall(QMetaObject::InvokeMetaMethod, 268, _a);
    return qax_result;
}

inline int Idmsoft::SetClipboard(const QString& data)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 269, _a);
    return qax_result;
}

inline int Idmsoft::SetColGapNoDict(int col_gap)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&col_gap};
    qt_metacall(QMetaObject::InvokeMetaMethod, 270, _a);
    return qax_result;
}

inline int Idmsoft::SetDict(int index, const QString& dict_name)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index, (void*)&dict_name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 271, _a);
    return qax_result;
}

inline int Idmsoft::SetDictMem(int index, int addr, int size)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index, (void*)&addr, (void*)&size};
    qt_metacall(QMetaObject::InvokeMetaMethod, 272, _a);
    return qax_result;
}

inline int Idmsoft::SetDictPwd(const QString& pwd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pwd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 273, _a);
    return qax_result;
}

inline int Idmsoft::SetDisplayAcceler(int level)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&level};
    qt_metacall(QMetaObject::InvokeMetaMethod, 274, _a);
    return qax_result;
}

inline int Idmsoft::SetDisplayDelay(int t)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&t};
    qt_metacall(QMetaObject::InvokeMetaMethod, 275, _a);
    return qax_result;
}

inline int Idmsoft::SetDisplayInput(const QString& mode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 276, _a);
    return qax_result;
}

inline int Idmsoft::SetEnumWindowDelay(int delay)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&delay};
    qt_metacall(QMetaObject::InvokeMetaMethod, 277, _a);
    return qax_result;
}

inline int Idmsoft::SetEnv(int index, const QString& name, const QString& value)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index, (void*)&name, (void*)&value};
    qt_metacall(QMetaObject::InvokeMetaMethod, 278, _a);
    return qax_result;
}

inline int Idmsoft::SetExactOcr(int exact_ocr)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&exact_ocr};
    qt_metacall(QMetaObject::InvokeMetaMethod, 279, _a);
    return qax_result;
}

inline int Idmsoft::SetExportDict(int index, const QString& dict_name)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index, (void*)&dict_name};
    qt_metacall(QMetaObject::InvokeMetaMethod, 280, _a);
    return qax_result;
}

inline int Idmsoft::SetKeypadDelay(const QString& type, int delay)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&type, (void*)&delay};
    qt_metacall(QMetaObject::InvokeMetaMethod, 281, _a);
    return qax_result;
}

inline int Idmsoft::SetMemoryFindResultToFile(const QString& file)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 282, _a);
    return qax_result;
}

inline int Idmsoft::SetMemoryHwndAsProcessId(int en)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&en};
    qt_metacall(QMetaObject::InvokeMetaMethod, 283, _a);
    return qax_result;
}

inline int Idmsoft::SetMinColGap(int col_gap)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&col_gap};
    qt_metacall(QMetaObject::InvokeMetaMethod, 284, _a);
    return qax_result;
}

inline int Idmsoft::SetMinRowGap(int row_gap)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&row_gap};
    qt_metacall(QMetaObject::InvokeMetaMethod, 285, _a);
    return qax_result;
}

inline int Idmsoft::SetMouseDelay(const QString& type, int delay)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&type, (void*)&delay};
    qt_metacall(QMetaObject::InvokeMetaMethod, 286, _a);
    return qax_result;
}

inline int Idmsoft::SetPath(const QString& path)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&path};
    qt_metacall(QMetaObject::InvokeMetaMethod, 287, _a);
    return qax_result;
}

inline int Idmsoft::SetPicPwd(const QString& pwd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&pwd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 288, _a);
    return qax_result;
}

inline int Idmsoft::SetRowGapNoDict(int row_gap)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&row_gap};
    qt_metacall(QMetaObject::InvokeMetaMethod, 289, _a);
    return qax_result;
}

inline int Idmsoft::SetScreen(int width, int height, int depth)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&width, (void*)&height, (void*)&depth};
    qt_metacall(QMetaObject::InvokeMetaMethod, 290, _a);
    return qax_result;
}

inline int Idmsoft::SetShowErrorMsg(int show)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&show};
    qt_metacall(QMetaObject::InvokeMetaMethod, 291, _a);
    return qax_result;
}

inline int Idmsoft::SetSimMode(int mode)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&mode};
    qt_metacall(QMetaObject::InvokeMetaMethod, 292, _a);
    return qax_result;
}

inline int Idmsoft::SetUAC(int uac)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&uac};
    qt_metacall(QMetaObject::InvokeMetaMethod, 293, _a);
    return qax_result;
}

inline int Idmsoft::SetWindowSize(int hwnd, int width, int height)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&width, (void*)&height};
    qt_metacall(QMetaObject::InvokeMetaMethod, 294, _a);
    return qax_result;
}

inline int Idmsoft::SetWindowState(int hwnd, int flag)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&flag};
    qt_metacall(QMetaObject::InvokeMetaMethod, 295, _a);
    return qax_result;
}

inline int Idmsoft::SetWindowText(int hwnd, const QString& text)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&text};
    qt_metacall(QMetaObject::InvokeMetaMethod, 296, _a);
    return qax_result;
}

inline int Idmsoft::SetWindowTransparent(int hwnd, int v)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&v};
    qt_metacall(QMetaObject::InvokeMetaMethod, 297, _a);
    return qax_result;
}

inline int Idmsoft::SetWordGap(int word_gap)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&word_gap};
    qt_metacall(QMetaObject::InvokeMetaMethod, 298, _a);
    return qax_result;
}

inline int Idmsoft::SetWordGapNoDict(int word_gap)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&word_gap};
    qt_metacall(QMetaObject::InvokeMetaMethod, 299, _a);
    return qax_result;
}

inline int Idmsoft::SetWordLineHeight(int line_height)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&line_height};
    qt_metacall(QMetaObject::InvokeMetaMethod, 300, _a);
    return qax_result;
}

inline int Idmsoft::SetWordLineHeightNoDict(int line_height)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&line_height};
    qt_metacall(QMetaObject::InvokeMetaMethod, 301, _a);
    return qax_result;
}

inline int Idmsoft::ShowScrMsg(int x1, int y1, int x2, int y2, const QString& msg, const QString& color)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&x1, (void*)&y1, (void*)&x2, (void*)&y2, (void*)&msg, (void*)&color};
    qt_metacall(QMetaObject::InvokeMetaMethod, 302, _a);
    return qax_result;
}

inline QString Idmsoft::SortPosDistance(const QString& all_pos, int type, int x, int y)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&all_pos, (void*)&type, (void*)&x, (void*)&y};
    qt_metacall(QMetaObject::InvokeMetaMethod, 303, _a);
    return qax_result;
}

inline int Idmsoft::Stop(int id)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&id};
    qt_metacall(QMetaObject::InvokeMetaMethod, 304, _a);
    return qax_result;
}

inline int Idmsoft::StrStr(const QString& s, const QString& str)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&s, (void*)&str};
    qt_metacall(QMetaObject::InvokeMetaMethod, 305, _a);
    return qax_result;
}

inline QString Idmsoft::StringToData(const QString& string_value, int type)
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&string_value, (void*)&type};
    qt_metacall(QMetaObject::InvokeMetaMethod, 306, _a);
    return qax_result;
}

inline int Idmsoft::UnBindWindow()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 307, _a);
    return qax_result;
}

inline int Idmsoft::UseDict(int index)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&index};
    qt_metacall(QMetaObject::InvokeMetaMethod, 308, _a);
    return qax_result;
}

inline QString Idmsoft::Ver()
{
    QString qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 309, _a);
    return qax_result;
}

inline int Idmsoft::WaitKey(int key_code, int time_out)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&key_code, (void*)&time_out};
    qt_metacall(QMetaObject::InvokeMetaMethod, 310, _a);
    return qax_result;
}

inline int Idmsoft::WheelDown()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 311, _a);
    return qax_result;
}

inline int Idmsoft::WheelUp()
{
    int qax_result;
    void *_a[] = {(void*)&qax_result};
    qt_metacall(QMetaObject::InvokeMetaMethod, 312, _a);
    return qax_result;
}

inline int Idmsoft::WriteData(int hwnd, const QString& addr, const QString& data)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&data};
    qt_metacall(QMetaObject::InvokeMetaMethod, 313, _a);
    return qax_result;
}

inline int Idmsoft::WriteDouble(int hwnd, const QString& addr, double v)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&v};
    qt_metacall(QMetaObject::InvokeMetaMethod, 314, _a);
    return qax_result;
}

inline int Idmsoft::WriteFile(const QString& file, const QString& content)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&file, (void*)&content};
    qt_metacall(QMetaObject::InvokeMetaMethod, 315, _a);
    return qax_result;
}

inline int Idmsoft::WriteFloat(int hwnd, const QString& addr, double v)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&v};
    qt_metacall(QMetaObject::InvokeMetaMethod, 316, _a);
    return qax_result;
}

inline int Idmsoft::WriteIni(const QString& section, const QString& key, const QString& v, const QString& file)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&section, (void*)&key, (void*)&v, (void*)&file};
    qt_metacall(QMetaObject::InvokeMetaMethod, 317, _a);
    return qax_result;
}

inline int Idmsoft::WriteIniPwd(const QString& section, const QString& key, const QString& v, const QString& file, const QString& pwd)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&section, (void*)&key, (void*)&v, (void*)&file, (void*)&pwd};
    qt_metacall(QMetaObject::InvokeMetaMethod, 318, _a);
    return qax_result;
}

inline int Idmsoft::WriteInt(int hwnd, const QString& addr, int type, int v)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&type, (void*)&v};
    qt_metacall(QMetaObject::InvokeMetaMethod, 319, _a);
    return qax_result;
}

inline int Idmsoft::WriteString(int hwnd, const QString& addr, int type, const QString& v)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&hwnd, (void*)&addr, (void*)&type, (void*)&v};
    qt_metacall(QMetaObject::InvokeMetaMethod, 320, _a);
    return qax_result;
}

inline int Idmsoft::delay(int mis)
{
    int qax_result;
    void *_a[] = {(void*)&qax_result, (void*)&mis};
    qt_metacall(QMetaObject::InvokeMetaMethod, 321, _a);
    return qax_result;
}



#endif

}

QT_BEGIN_NAMESPACE

namespace QtMetaTypePrivate {
template<>
struct QMetaTypeFunctionHelper<Dm::dmsoft, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Dm::dmsoft*>(t)->Dm::dmsoft::~dmsoft();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Dm::dmsoft;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Dm::dmsoft*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Dm::dmsoft*>(t); }
#endif // QT_NO_DATASTREAM
};

template<>
struct QMetaTypeFunctionHelper<Dm::Idmsoft, /* Accepted */ true> {
    static void Destruct(void *t)
    {
        Q_UNUSED(t)
        static_cast<Dm::Idmsoft*>(t)->Dm::Idmsoft::~Idmsoft();
    }
    static void *Construct(void *where, const void *t)
    {
        Q_ASSERT(!t);
        Q_UNUSED(t)
        return new (where) Dm::Idmsoft;
    }
#ifndef QT_NO_DATASTREAM
    static void Save(QDataStream &stream, const void *t) { stream << *static_cast<const Dm::Idmsoft*>(t); }
    static void Load(QDataStream &stream, void *t) { stream >> *static_cast<Dm::Idmsoft*>(t); }
#endif // QT_NO_DATASTREAM
};

} // namespace QtMetaTypePrivate
QT_END_NAMESPACE

#endif

